{"version":3,"file":"index-C_T60eMp.js","sources":["../../node_modules/umap-js/dist/utils.js","../../node_modules/umap-js/dist/heap.js","../../node_modules/umap-js/dist/matrix.js","../../node_modules/umap-js/dist/tree.js","../../node_modules/umap-js/dist/nn_descent.js","../../node_modules/ml-levenberg-marquardt/node_modules/is-any-array/src/index.js","../../node_modules/ml-levenberg-marquardt/src/errorCalculation.js","../../node_modules/is-any-array/lib-esm/index.js","../../node_modules/ml-array-max/lib-es6/index.js","../../node_modules/ml-array-min/lib-es6/index.js","../../node_modules/ml-array-rescale/lib-es6/index.js","../../node_modules/ml-matrix/src/inspect.js","../../node_modules/ml-matrix/src/mathOperations.js","../../node_modules/ml-matrix/src/util.js","../../node_modules/ml-matrix/src/stat.js","../../node_modules/ml-matrix/src/matrix.js","../../node_modules/ml-matrix/src/wrap/WrapperMatrix2D.js","../../node_modules/ml-matrix/src/dc/lu.js","../../node_modules/ml-matrix/src/dc/util.js","../../node_modules/ml-matrix/src/dc/qr.js","../../node_modules/ml-matrix/src/dc/svd.js","../../node_modules/ml-matrix/src/decompositions.js","../../node_modules/ml-levenberg-marquardt/src/step.js","../../node_modules/ml-levenberg-marquardt/src/index.js","../../node_modules/umap-js/dist/umap.js","../../node_modules/umap-js/dist/index.js"],"sourcesContent":["\"use strict\";\nvar __values = (this && this.__values) || function (o) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\n    if (m) return m.call(o);\n    return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction tauRandInt(n, random) {\n    return Math.floor(random() * n);\n}\nexports.tauRandInt = tauRandInt;\nfunction tauRand(random) {\n    return random();\n}\nexports.tauRand = tauRand;\nfunction norm(vec) {\n    var e_1, _a;\n    var result = 0;\n    try {\n        for (var vec_1 = __values(vec), vec_1_1 = vec_1.next(); !vec_1_1.done; vec_1_1 = vec_1.next()) {\n            var item = vec_1_1.value;\n            result += Math.pow(item, 2);\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (vec_1_1 && !vec_1_1.done && (_a = vec_1.return)) _a.call(vec_1);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return Math.sqrt(result);\n}\nexports.norm = norm;\nfunction empty(n) {\n    var output = [];\n    for (var i = 0; i < n; i++) {\n        output.push(undefined);\n    }\n    return output;\n}\nexports.empty = empty;\nfunction range(n) {\n    return empty(n).map(function (_, i) { return i; });\n}\nexports.range = range;\nfunction filled(n, v) {\n    return empty(n).map(function () { return v; });\n}\nexports.filled = filled;\nfunction zeros(n) {\n    return filled(n, 0);\n}\nexports.zeros = zeros;\nfunction ones(n) {\n    return filled(n, 1);\n}\nexports.ones = ones;\nfunction linear(a, b, len) {\n    return empty(len).map(function (_, i) {\n        return a + i * ((b - a) / (len - 1));\n    });\n}\nexports.linear = linear;\nfunction sum(input) {\n    return input.reduce(function (sum, val) { return sum + val; });\n}\nexports.sum = sum;\nfunction mean(input) {\n    return sum(input) / input.length;\n}\nexports.mean = mean;\nfunction max(input) {\n    var max = 0;\n    for (var i = 0; i < input.length; i++) {\n        max = input[i] > max ? input[i] : max;\n    }\n    return max;\n}\nexports.max = max;\nfunction max2d(input) {\n    var max = 0;\n    for (var i = 0; i < input.length; i++) {\n        for (var j = 0; j < input[i].length; j++) {\n            max = input[i][j] > max ? input[i][j] : max;\n        }\n    }\n    return max;\n}\nexports.max2d = max2d;\nfunction rejectionSample(nSamples, poolSize, random) {\n    var result = zeros(nSamples);\n    for (var i = 0; i < nSamples; i++) {\n        var rejectSample = true;\n        while (rejectSample) {\n            var j = tauRandInt(poolSize, random);\n            var broken = false;\n            for (var k = 0; k < i; k++) {\n                if (j === result[k]) {\n                    broken = true;\n                    break;\n                }\n            }\n            if (!broken) {\n                rejectSample = false;\n            }\n            result[i] = j;\n        }\n    }\n    return result;\n}\nexports.rejectionSample = rejectionSample;\nfunction reshape2d(x, a, b) {\n    var rows = [];\n    var count = 0;\n    var index = 0;\n    if (x.length !== a * b) {\n        throw new Error('Array dimensions must match input length.');\n    }\n    for (var i = 0; i < a; i++) {\n        var col = [];\n        for (var j = 0; j < b; j++) {\n            col.push(x[index]);\n            index += 1;\n        }\n        rows.push(col);\n        count += 1;\n    }\n    return rows;\n}\nexports.reshape2d = reshape2d;\n","\"use strict\";\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils = __importStar(require(\"./utils\"));\nfunction makeHeap(nPoints, size) {\n    var makeArrays = function (fillValue) {\n        return utils.empty(nPoints).map(function () {\n            return utils.filled(size, fillValue);\n        });\n    };\n    var heap = [];\n    heap.push(makeArrays(-1));\n    heap.push(makeArrays(Infinity));\n    heap.push(makeArrays(0));\n    return heap;\n}\nexports.makeHeap = makeHeap;\nfunction rejectionSample(nSamples, poolSize, random) {\n    var result = utils.zeros(nSamples);\n    for (var i = 0; i < nSamples; i++) {\n        var rejectSample = true;\n        var j = 0;\n        while (rejectSample) {\n            j = utils.tauRandInt(poolSize, random);\n            var broken = false;\n            for (var k = 0; k < i; k++) {\n                if (j === result[k]) {\n                    broken = true;\n                    break;\n                }\n            }\n            if (!broken)\n                rejectSample = false;\n        }\n        result[i] = j;\n    }\n    return result;\n}\nexports.rejectionSample = rejectionSample;\nfunction heapPush(heap, row, weight, index, flag) {\n    row = Math.floor(row);\n    var indices = heap[0][row];\n    var weights = heap[1][row];\n    var isNew = heap[2][row];\n    if (weight >= weights[0]) {\n        return 0;\n    }\n    for (var i = 0; i < indices.length; i++) {\n        if (index === indices[i]) {\n            return 0;\n        }\n    }\n    return uncheckedHeapPush(heap, row, weight, index, flag);\n}\nexports.heapPush = heapPush;\nfunction uncheckedHeapPush(heap, row, weight, index, flag) {\n    var indices = heap[0][row];\n    var weights = heap[1][row];\n    var isNew = heap[2][row];\n    if (weight >= weights[0]) {\n        return 0;\n    }\n    weights[0] = weight;\n    indices[0] = index;\n    isNew[0] = flag;\n    var i = 0;\n    var iSwap = 0;\n    while (true) {\n        var ic1 = 2 * i + 1;\n        var ic2 = ic1 + 1;\n        var heapShape2 = heap[0][0].length;\n        if (ic1 >= heapShape2) {\n            break;\n        }\n        else if (ic2 >= heapShape2) {\n            if (weights[ic1] > weight) {\n                iSwap = ic1;\n            }\n            else {\n                break;\n            }\n        }\n        else if (weights[ic1] >= weights[ic2]) {\n            if (weight < weights[ic1]) {\n                iSwap = ic1;\n            }\n            else {\n                break;\n            }\n        }\n        else {\n            if (weight < weights[ic2]) {\n                iSwap = ic2;\n            }\n            else {\n                break;\n            }\n        }\n        weights[i] = weights[iSwap];\n        indices[i] = indices[iSwap];\n        isNew[i] = isNew[iSwap];\n        i = iSwap;\n    }\n    weights[i] = weight;\n    indices[i] = index;\n    isNew[i] = flag;\n    return 1;\n}\nexports.uncheckedHeapPush = uncheckedHeapPush;\nfunction buildCandidates(currentGraph, nVertices, nNeighbors, maxCandidates, random) {\n    var candidateNeighbors = makeHeap(nVertices, maxCandidates);\n    for (var i = 0; i < nVertices; i++) {\n        for (var j = 0; j < nNeighbors; j++) {\n            if (currentGraph[0][i][j] < 0) {\n                continue;\n            }\n            var idx = currentGraph[0][i][j];\n            var isn = currentGraph[2][i][j];\n            var d = utils.tauRand(random);\n            heapPush(candidateNeighbors, i, d, idx, isn);\n            heapPush(candidateNeighbors, idx, d, i, isn);\n            currentGraph[2][i][j] = 0;\n        }\n    }\n    return candidateNeighbors;\n}\nexports.buildCandidates = buildCandidates;\nfunction deheapSort(heap) {\n    var indices = heap[0];\n    var weights = heap[1];\n    for (var i = 0; i < indices.length; i++) {\n        var indHeap = indices[i];\n        var distHeap = weights[i];\n        for (var j = 0; j < indHeap.length - 1; j++) {\n            var indHeapIndex = indHeap.length - j - 1;\n            var distHeapIndex = distHeap.length - j - 1;\n            var temp1 = indHeap[0];\n            indHeap[0] = indHeap[indHeapIndex];\n            indHeap[indHeapIndex] = temp1;\n            var temp2 = distHeap[0];\n            distHeap[0] = distHeap[distHeapIndex];\n            distHeap[distHeapIndex] = temp2;\n            siftDown(distHeap, indHeap, distHeapIndex, 0);\n        }\n    }\n    return { indices: indices, weights: weights };\n}\nexports.deheapSort = deheapSort;\nfunction siftDown(heap1, heap2, ceiling, elt) {\n    while (elt * 2 + 1 < ceiling) {\n        var leftChild = elt * 2 + 1;\n        var rightChild = leftChild + 1;\n        var swap = elt;\n        if (heap1[swap] < heap1[leftChild]) {\n            swap = leftChild;\n        }\n        if (rightChild < ceiling && heap1[swap] < heap1[rightChild]) {\n            swap = rightChild;\n        }\n        if (swap === elt) {\n            break;\n        }\n        else {\n            var temp1 = heap1[elt];\n            heap1[elt] = heap1[swap];\n            heap1[swap] = temp1;\n            var temp2 = heap2[elt];\n            heap2[elt] = heap2[swap];\n            heap2[swap] = temp2;\n            elt = swap;\n        }\n    }\n}\nfunction smallestFlagged(heap, row) {\n    var ind = heap[0][row];\n    var dist = heap[1][row];\n    var flag = heap[2][row];\n    var minDist = Infinity;\n    var resultIndex = -1;\n    for (var i = 0; i > ind.length; i++) {\n        if (flag[i] === 1 && dist[i] < minDist) {\n            minDist = dist[i];\n            resultIndex = i;\n        }\n    }\n    if (resultIndex >= 0) {\n        flag[resultIndex] = 0;\n        return Math.floor(ind[resultIndex]);\n    }\n    else {\n        return -1;\n    }\n}\nexports.smallestFlagged = smallestFlagged;\n","\"use strict\";\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __values = (this && this.__values) || function (o) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\n    if (m) return m.call(o);\n    return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar _a;\nvar utils = __importStar(require(\"./utils\"));\nvar SparseMatrix = (function () {\n    function SparseMatrix(rows, cols, values, dims) {\n        this.entries = new Map();\n        this.nRows = 0;\n        this.nCols = 0;\n        if (rows.length !== cols.length || rows.length !== values.length) {\n            throw new Error('rows, cols and values arrays must all have the same length');\n        }\n        this.nRows = dims[0];\n        this.nCols = dims[1];\n        for (var i = 0; i < values.length; i++) {\n            var row = rows[i];\n            var col = cols[i];\n            this.checkDims(row, col);\n            var key = this.makeKey(row, col);\n            this.entries.set(key, { value: values[i], row: row, col: col });\n        }\n    }\n    SparseMatrix.prototype.makeKey = function (row, col) {\n        return row + \":\" + col;\n    };\n    SparseMatrix.prototype.checkDims = function (row, col) {\n        var withinBounds = row < this.nRows && col < this.nCols;\n        if (!withinBounds) {\n            throw new Error('row and/or col specified outside of matrix dimensions');\n        }\n    };\n    SparseMatrix.prototype.set = function (row, col, value) {\n        this.checkDims(row, col);\n        var key = this.makeKey(row, col);\n        if (!this.entries.has(key)) {\n            this.entries.set(key, { value: value, row: row, col: col });\n        }\n        else {\n            this.entries.get(key).value = value;\n        }\n    };\n    SparseMatrix.prototype.get = function (row, col, defaultValue) {\n        if (defaultValue === void 0) { defaultValue = 0; }\n        this.checkDims(row, col);\n        var key = this.makeKey(row, col);\n        if (this.entries.has(key)) {\n            return this.entries.get(key).value;\n        }\n        else {\n            return defaultValue;\n        }\n    };\n    SparseMatrix.prototype.getAll = function (ordered) {\n        if (ordered === void 0) { ordered = true; }\n        var rowColValues = [];\n        this.entries.forEach(function (value) {\n            rowColValues.push(value);\n        });\n        if (ordered) {\n            rowColValues.sort(function (a, b) {\n                if (a.row === b.row) {\n                    return a.col - b.col;\n                }\n                else {\n                    return a.row - b.row;\n                }\n            });\n        }\n        return rowColValues;\n    };\n    SparseMatrix.prototype.getDims = function () {\n        return [this.nRows, this.nCols];\n    };\n    SparseMatrix.prototype.getRows = function () {\n        return Array.from(this.entries, function (_a) {\n            var _b = __read(_a, 2), key = _b[0], value = _b[1];\n            return value.row;\n        });\n    };\n    SparseMatrix.prototype.getCols = function () {\n        return Array.from(this.entries, function (_a) {\n            var _b = __read(_a, 2), key = _b[0], value = _b[1];\n            return value.col;\n        });\n    };\n    SparseMatrix.prototype.getValues = function () {\n        return Array.from(this.entries, function (_a) {\n            var _b = __read(_a, 2), key = _b[0], value = _b[1];\n            return value.value;\n        });\n    };\n    SparseMatrix.prototype.forEach = function (fn) {\n        this.entries.forEach(function (value) { return fn(value.value, value.row, value.col); });\n    };\n    SparseMatrix.prototype.map = function (fn) {\n        var vals = [];\n        this.entries.forEach(function (value) {\n            vals.push(fn(value.value, value.row, value.col));\n        });\n        var dims = [this.nRows, this.nCols];\n        return new SparseMatrix(this.getRows(), this.getCols(), vals, dims);\n    };\n    SparseMatrix.prototype.toArray = function () {\n        var _this = this;\n        var rows = utils.empty(this.nRows);\n        var output = rows.map(function () {\n            return utils.zeros(_this.nCols);\n        });\n        this.entries.forEach(function (value) {\n            output[value.row][value.col] = value.value;\n        });\n        return output;\n    };\n    return SparseMatrix;\n}());\nexports.SparseMatrix = SparseMatrix;\nfunction transpose(matrix) {\n    var cols = [];\n    var rows = [];\n    var vals = [];\n    matrix.forEach(function (value, row, col) {\n        cols.push(row);\n        rows.push(col);\n        vals.push(value);\n    });\n    var dims = [matrix.nCols, matrix.nRows];\n    return new SparseMatrix(rows, cols, vals, dims);\n}\nexports.transpose = transpose;\nfunction identity(size) {\n    var _a = __read(size, 1), rows = _a[0];\n    var matrix = new SparseMatrix([], [], [], size);\n    for (var i = 0; i < rows; i++) {\n        matrix.set(i, i, 1);\n    }\n    return matrix;\n}\nexports.identity = identity;\nfunction pairwiseMultiply(a, b) {\n    return elementWise(a, b, function (x, y) { return x * y; });\n}\nexports.pairwiseMultiply = pairwiseMultiply;\nfunction add(a, b) {\n    return elementWise(a, b, function (x, y) { return x + y; });\n}\nexports.add = add;\nfunction subtract(a, b) {\n    return elementWise(a, b, function (x, y) { return x - y; });\n}\nexports.subtract = subtract;\nfunction maximum(a, b) {\n    return elementWise(a, b, function (x, y) { return (x > y ? x : y); });\n}\nexports.maximum = maximum;\nfunction multiplyScalar(a, scalar) {\n    return a.map(function (value) {\n        return value * scalar;\n    });\n}\nexports.multiplyScalar = multiplyScalar;\nfunction eliminateZeros(m) {\n    var zeroIndices = new Set();\n    var values = m.getValues();\n    var rows = m.getRows();\n    var cols = m.getCols();\n    for (var i = 0; i < values.length; i++) {\n        if (values[i] === 0) {\n            zeroIndices.add(i);\n        }\n    }\n    var removeByZeroIndex = function (_, index) { return !zeroIndices.has(index); };\n    var nextValues = values.filter(removeByZeroIndex);\n    var nextRows = rows.filter(removeByZeroIndex);\n    var nextCols = cols.filter(removeByZeroIndex);\n    return new SparseMatrix(nextRows, nextCols, nextValues, m.getDims());\n}\nexports.eliminateZeros = eliminateZeros;\nfunction normalize(m, normType) {\n    if (normType === void 0) { normType = \"l2\"; }\n    var e_1, _a;\n    var normFn = normFns[normType];\n    var colsByRow = new Map();\n    m.forEach(function (_, row, col) {\n        var cols = colsByRow.get(row) || [];\n        cols.push(col);\n        colsByRow.set(row, cols);\n    });\n    var nextMatrix = new SparseMatrix([], [], [], m.getDims());\n    var _loop_1 = function (row) {\n        var cols = colsByRow.get(row).sort();\n        var vals = cols.map(function (col) { return m.get(row, col); });\n        var norm = normFn(vals);\n        for (var i = 0; i < norm.length; i++) {\n            nextMatrix.set(row, cols[i], norm[i]);\n        }\n    };\n    try {\n        for (var _b = __values(colsByRow.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var row = _c.value;\n            _loop_1(row);\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return nextMatrix;\n}\nexports.normalize = normalize;\nvar normFns = (_a = {},\n    _a[\"max\"] = function (xs) {\n        var max = -Infinity;\n        for (var i = 0; i < xs.length; i++) {\n            max = xs[i] > max ? xs[i] : max;\n        }\n        return xs.map(function (x) { return x / max; });\n    },\n    _a[\"l1\"] = function (xs) {\n        var sum = 0;\n        for (var i = 0; i < xs.length; i++) {\n            sum += xs[i];\n        }\n        return xs.map(function (x) { return x / sum; });\n    },\n    _a[\"l2\"] = function (xs) {\n        var sum = 0;\n        for (var i = 0; i < xs.length; i++) {\n            sum += Math.pow(xs[i], 2);\n        }\n        return xs.map(function (x) { return Math.sqrt(Math.pow(x, 2) / sum); });\n    },\n    _a);\nfunction elementWise(a, b, op) {\n    var visited = new Set();\n    var rows = [];\n    var cols = [];\n    var vals = [];\n    var operate = function (row, col) {\n        rows.push(row);\n        cols.push(col);\n        var nextValue = op(a.get(row, col), b.get(row, col));\n        vals.push(nextValue);\n    };\n    var valuesA = a.getValues();\n    var rowsA = a.getRows();\n    var colsA = a.getCols();\n    for (var i = 0; i < valuesA.length; i++) {\n        var row = rowsA[i];\n        var col = colsA[i];\n        var key = row + \":\" + col;\n        visited.add(key);\n        operate(row, col);\n    }\n    var valuesB = b.getValues();\n    var rowsB = b.getRows();\n    var colsB = b.getCols();\n    for (var i = 0; i < valuesB.length; i++) {\n        var row = rowsB[i];\n        var col = colsB[i];\n        var key = row + \":\" + col;\n        if (visited.has(key))\n            continue;\n        operate(row, col);\n    }\n    var dims = [a.nRows, a.nCols];\n    return new SparseMatrix(rows, cols, vals, dims);\n}\nfunction getCSR(x) {\n    var entries = [];\n    x.forEach(function (value, row, col) {\n        entries.push({ value: value, row: row, col: col });\n    });\n    entries.sort(function (a, b) {\n        if (a.row === b.row) {\n            return a.col - b.col;\n        }\n        else {\n            return a.row - b.row;\n        }\n    });\n    var indices = [];\n    var values = [];\n    var indptr = [];\n    var currentRow = -1;\n    for (var i = 0; i < entries.length; i++) {\n        var _a = entries[i], row = _a.row, col = _a.col, value = _a.value;\n        if (row !== currentRow) {\n            currentRow = row;\n            indptr.push(i);\n        }\n        indices.push(col);\n        values.push(value);\n    }\n    return { indices: indices, values: values, indptr: indptr };\n}\nexports.getCSR = getCSR;\n","\"use strict\";\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nvar __values = (this && this.__values) || function (o) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\n    if (m) return m.call(o);\n    return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils = __importStar(require(\"./utils\"));\nvar FlatTree = (function () {\n    function FlatTree(hyperplanes, offsets, children, indices) {\n        this.hyperplanes = hyperplanes;\n        this.offsets = offsets;\n        this.children = children;\n        this.indices = indices;\n    }\n    return FlatTree;\n}());\nexports.FlatTree = FlatTree;\nfunction makeForest(data, nNeighbors, nTrees, random) {\n    var leafSize = Math.max(10, nNeighbors);\n    var trees = utils\n        .range(nTrees)\n        .map(function (_, i) { return makeTree(data, leafSize, i, random); });\n    var forest = trees.map(function (tree) { return flattenTree(tree, leafSize); });\n    return forest;\n}\nexports.makeForest = makeForest;\nfunction makeTree(data, leafSize, n, random) {\n    if (leafSize === void 0) { leafSize = 30; }\n    var indices = utils.range(data.length);\n    var tree = makeEuclideanTree(data, indices, leafSize, n, random);\n    return tree;\n}\nfunction makeEuclideanTree(data, indices, leafSize, q, random) {\n    if (leafSize === void 0) { leafSize = 30; }\n    if (indices.length > leafSize) {\n        var splitResults = euclideanRandomProjectionSplit(data, indices, random);\n        var indicesLeft = splitResults.indicesLeft, indicesRight = splitResults.indicesRight, hyperplane = splitResults.hyperplane, offset = splitResults.offset;\n        var leftChild = makeEuclideanTree(data, indicesLeft, leafSize, q + 1, random);\n        var rightChild = makeEuclideanTree(data, indicesRight, leafSize, q + 1, random);\n        var node = { leftChild: leftChild, rightChild: rightChild, isLeaf: false, hyperplane: hyperplane, offset: offset };\n        return node;\n    }\n    else {\n        var node = { indices: indices, isLeaf: true };\n        return node;\n    }\n}\nfunction euclideanRandomProjectionSplit(data, indices, random) {\n    var dim = data[0].length;\n    var leftIndex = utils.tauRandInt(indices.length, random);\n    var rightIndex = utils.tauRandInt(indices.length, random);\n    rightIndex += leftIndex === rightIndex ? 1 : 0;\n    rightIndex = rightIndex % indices.length;\n    var left = indices[leftIndex];\n    var right = indices[rightIndex];\n    var hyperplaneOffset = 0;\n    var hyperplaneVector = utils.zeros(dim);\n    for (var i = 0; i < hyperplaneVector.length; i++) {\n        hyperplaneVector[i] = data[left][i] - data[right][i];\n        hyperplaneOffset -=\n            (hyperplaneVector[i] * (data[left][i] + data[right][i])) / 2.0;\n    }\n    var nLeft = 0;\n    var nRight = 0;\n    var side = utils.zeros(indices.length);\n    for (var i = 0; i < indices.length; i++) {\n        var margin = hyperplaneOffset;\n        for (var d = 0; d < dim; d++) {\n            margin += hyperplaneVector[d] * data[indices[i]][d];\n        }\n        if (margin === 0) {\n            side[i] = utils.tauRandInt(2, random);\n            if (side[i] === 0) {\n                nLeft += 1;\n            }\n            else {\n                nRight += 1;\n            }\n        }\n        else if (margin > 0) {\n            side[i] = 0;\n            nLeft += 1;\n        }\n        else {\n            side[i] = 1;\n            nRight += 1;\n        }\n    }\n    var indicesLeft = utils.zeros(nLeft);\n    var indicesRight = utils.zeros(nRight);\n    nLeft = 0;\n    nRight = 0;\n    for (var i = 0; i < side.length; i++) {\n        if (side[i] === 0) {\n            indicesLeft[nLeft] = indices[i];\n            nLeft += 1;\n        }\n        else {\n            indicesRight[nRight] = indices[i];\n            nRight += 1;\n        }\n    }\n    return {\n        indicesLeft: indicesLeft,\n        indicesRight: indicesRight,\n        hyperplane: hyperplaneVector,\n        offset: hyperplaneOffset,\n    };\n}\nfunction flattenTree(tree, leafSize) {\n    var nNodes = numNodes(tree);\n    var nLeaves = numLeaves(tree);\n    var hyperplanes = utils\n        .range(nNodes)\n        .map(function () { return utils.zeros(tree.hyperplane ? tree.hyperplane.length : 0); });\n    var offsets = utils.zeros(nNodes);\n    var children = utils.range(nNodes).map(function () { return [-1, -1]; });\n    var indices = utils\n        .range(nLeaves)\n        .map(function () { return utils.range(leafSize).map(function () { return -1; }); });\n    recursiveFlatten(tree, hyperplanes, offsets, children, indices, 0, 0);\n    return new FlatTree(hyperplanes, offsets, children, indices);\n}\nfunction recursiveFlatten(tree, hyperplanes, offsets, children, indices, nodeNum, leafNum) {\n    var _a;\n    if (tree.isLeaf) {\n        children[nodeNum][0] = -leafNum;\n        (_a = indices[leafNum]).splice.apply(_a, __spread([0, tree.indices.length], tree.indices));\n        leafNum += 1;\n        return { nodeNum: nodeNum, leafNum: leafNum };\n    }\n    else {\n        hyperplanes[nodeNum] = tree.hyperplane;\n        offsets[nodeNum] = tree.offset;\n        children[nodeNum][0] = nodeNum + 1;\n        var oldNodeNum = nodeNum;\n        var res = recursiveFlatten(tree.leftChild, hyperplanes, offsets, children, indices, nodeNum + 1, leafNum);\n        nodeNum = res.nodeNum;\n        leafNum = res.leafNum;\n        children[oldNodeNum][1] = nodeNum + 1;\n        res = recursiveFlatten(tree.rightChild, hyperplanes, offsets, children, indices, nodeNum + 1, leafNum);\n        return { nodeNum: res.nodeNum, leafNum: res.leafNum };\n    }\n}\nfunction numNodes(tree) {\n    if (tree.isLeaf) {\n        return 1;\n    }\n    else {\n        return 1 + numNodes(tree.leftChild) + numNodes(tree.rightChild);\n    }\n}\nfunction numLeaves(tree) {\n    if (tree.isLeaf) {\n        return 1;\n    }\n    else {\n        return numLeaves(tree.leftChild) + numLeaves(tree.rightChild);\n    }\n}\nfunction makeLeafArray(rpForest) {\n    var e_1, _a;\n    if (rpForest.length > 0) {\n        var output = [];\n        try {\n            for (var rpForest_1 = __values(rpForest), rpForest_1_1 = rpForest_1.next(); !rpForest_1_1.done; rpForest_1_1 = rpForest_1.next()) {\n                var tree = rpForest_1_1.value;\n                output.push.apply(output, __spread(tree.indices));\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (rpForest_1_1 && !rpForest_1_1.done && (_a = rpForest_1.return)) _a.call(rpForest_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return output;\n    }\n    else {\n        return [[-1]];\n    }\n}\nexports.makeLeafArray = makeLeafArray;\nfunction selectSide(hyperplane, offset, point, random) {\n    var margin = offset;\n    for (var d = 0; d < point.length; d++) {\n        margin += hyperplane[d] * point[d];\n    }\n    if (margin === 0) {\n        var side = utils.tauRandInt(2, random);\n        return side;\n    }\n    else if (margin > 0) {\n        return 0;\n    }\n    else {\n        return 1;\n    }\n}\nfunction searchFlatTree(point, tree, random) {\n    var node = 0;\n    while (tree.children[node][0] > 0) {\n        var side = selectSide(tree.hyperplanes[node], tree.offsets[node], point, random);\n        if (side === 0) {\n            node = tree.children[node][0];\n        }\n        else {\n            node = tree.children[node][1];\n        }\n    }\n    var index = -1 * tree.children[node][0];\n    return tree.indices[index];\n}\nexports.searchFlatTree = searchFlatTree;\n","\"use strict\";\nvar __values = (this && this.__values) || function (o) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\n    if (m) return m.call(o);\n    return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar heap = __importStar(require(\"./heap\"));\nvar matrix = __importStar(require(\"./matrix\"));\nvar tree = __importStar(require(\"./tree\"));\nvar utils = __importStar(require(\"./utils\"));\nfunction makeNNDescent(distanceFn, random) {\n    return function nNDescent(data, leafArray, nNeighbors, nIters, maxCandidates, delta, rho, rpTreeInit) {\n        if (nIters === void 0) { nIters = 10; }\n        if (maxCandidates === void 0) { maxCandidates = 50; }\n        if (delta === void 0) { delta = 0.001; }\n        if (rho === void 0) { rho = 0.5; }\n        if (rpTreeInit === void 0) { rpTreeInit = true; }\n        var nVertices = data.length;\n        var currentGraph = heap.makeHeap(data.length, nNeighbors);\n        for (var i = 0; i < data.length; i++) {\n            var indices = heap.rejectionSample(nNeighbors, data.length, random);\n            for (var j = 0; j < indices.length; j++) {\n                var d = distanceFn(data[i], data[indices[j]]);\n                heap.heapPush(currentGraph, i, d, indices[j], 1);\n                heap.heapPush(currentGraph, indices[j], d, i, 1);\n            }\n        }\n        if (rpTreeInit) {\n            for (var n = 0; n < leafArray.length; n++) {\n                for (var i = 0; i < leafArray[n].length; i++) {\n                    if (leafArray[n][i] < 0) {\n                        break;\n                    }\n                    for (var j = i + 1; j < leafArray[n].length; j++) {\n                        if (leafArray[n][j] < 0) {\n                            break;\n                        }\n                        var d = distanceFn(data[leafArray[n][i]], data[leafArray[n][j]]);\n                        heap.heapPush(currentGraph, leafArray[n][i], d, leafArray[n][j], 1);\n                        heap.heapPush(currentGraph, leafArray[n][j], d, leafArray[n][i], 1);\n                    }\n                }\n            }\n        }\n        for (var n = 0; n < nIters; n++) {\n            var candidateNeighbors = heap.buildCandidates(currentGraph, nVertices, nNeighbors, maxCandidates, random);\n            var c = 0;\n            for (var i = 0; i < nVertices; i++) {\n                for (var j = 0; j < maxCandidates; j++) {\n                    var p = Math.floor(candidateNeighbors[0][i][j]);\n                    if (p < 0 || utils.tauRand(random) < rho) {\n                        continue;\n                    }\n                    for (var k = 0; k < maxCandidates; k++) {\n                        var q = Math.floor(candidateNeighbors[0][i][k]);\n                        var cj = candidateNeighbors[2][i][j];\n                        var ck = candidateNeighbors[2][i][k];\n                        if (q < 0 || (!cj && !ck)) {\n                            continue;\n                        }\n                        var d = distanceFn(data[p], data[q]);\n                        c += heap.heapPush(currentGraph, p, d, q, 1);\n                        c += heap.heapPush(currentGraph, q, d, p, 1);\n                    }\n                }\n            }\n            if (c <= delta * nNeighbors * data.length) {\n                break;\n            }\n        }\n        var sorted = heap.deheapSort(currentGraph);\n        return sorted;\n    };\n}\nexports.makeNNDescent = makeNNDescent;\nfunction makeInitializations(distanceFn) {\n    function initFromRandom(nNeighbors, data, queryPoints, _heap, random) {\n        for (var i = 0; i < queryPoints.length; i++) {\n            var indices = utils.rejectionSample(nNeighbors, data.length, random);\n            for (var j = 0; j < indices.length; j++) {\n                if (indices[j] < 0) {\n                    continue;\n                }\n                var d = distanceFn(data[indices[j]], queryPoints[i]);\n                heap.heapPush(_heap, i, d, indices[j], 1);\n            }\n        }\n    }\n    function initFromTree(_tree, data, queryPoints, _heap, random) {\n        for (var i = 0; i < queryPoints.length; i++) {\n            var indices = tree.searchFlatTree(queryPoints[i], _tree, random);\n            for (var j = 0; j < indices.length; j++) {\n                if (indices[j] < 0) {\n                    return;\n                }\n                var d = distanceFn(data[indices[j]], queryPoints[i]);\n                heap.heapPush(_heap, i, d, indices[j], 1);\n            }\n        }\n        return;\n    }\n    return { initFromRandom: initFromRandom, initFromTree: initFromTree };\n}\nexports.makeInitializations = makeInitializations;\nfunction makeInitializedNNSearch(distanceFn) {\n    return function nnSearchFn(data, graph, initialization, queryPoints) {\n        var e_1, _a;\n        var _b = matrix.getCSR(graph), indices = _b.indices, indptr = _b.indptr;\n        for (var i = 0; i < queryPoints.length; i++) {\n            var tried = new Set(initialization[0][i]);\n            while (true) {\n                var vertex = heap.smallestFlagged(initialization, i);\n                if (vertex === -1) {\n                    break;\n                }\n                var candidates = indices.slice(indptr[vertex], indptr[vertex + 1]);\n                try {\n                    for (var candidates_1 = __values(candidates), candidates_1_1 = candidates_1.next(); !candidates_1_1.done; candidates_1_1 = candidates_1.next()) {\n                        var candidate = candidates_1_1.value;\n                        if (candidate === vertex ||\n                            candidate === -1 ||\n                            tried.has(candidate)) {\n                            continue;\n                        }\n                        var d = distanceFn(data[candidate], queryPoints[i]);\n                        heap.uncheckedHeapPush(initialization, i, d, candidate, 1);\n                        tried.add(candidate);\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (candidates_1_1 && !candidates_1_1.done && (_a = candidates_1.return)) _a.call(candidates_1);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n            }\n        }\n        return initialization;\n    };\n}\nexports.makeInitializedNNSearch = makeInitializedNNSearch;\nfunction initializeSearch(forest, data, queryPoints, nNeighbors, initFromRandom, initFromTree, random) {\n    var e_2, _a;\n    var results = heap.makeHeap(queryPoints.length, nNeighbors);\n    initFromRandom(nNeighbors, data, queryPoints, results, random);\n    if (forest) {\n        try {\n            for (var forest_1 = __values(forest), forest_1_1 = forest_1.next(); !forest_1_1.done; forest_1_1 = forest_1.next()) {\n                var tree_1 = forest_1_1.value;\n                initFromTree(tree_1, data, queryPoints, results, random);\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (forest_1_1 && !forest_1_1.done && (_a = forest_1.return)) _a.call(forest_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n    }\n    return results;\n}\nexports.initializeSearch = initializeSearch;\n","const toString = Object.prototype.toString;\n\nexport default function isAnyArray(object) {\n  return toString.call(object).endsWith('Array]');\n}\n","/**\n * Calculate current error\n * @ignore\n * @param {{x:Array<number>, y:Array<number>}} data - Array of points to fit in the format [x1, x2, ... ], [y1, y2, ... ]\n * @param {Array<number>} parameters - Array of current parameter values\n * @param {function} parameterizedFunction - The parameters and returns a function with the independent variable as a parameter\n * @return {number}\n */\nexport default function errorCalculation(\n  data,\n  parameters,\n  parameterizedFunction,\n) {\n  let error = 0;\n  const func = parameterizedFunction(parameters);\n\n  for (let i = 0; i < data.x.length; i++) {\n    error += Math.abs(data.y[i] - func(data.x[i]));\n  }\n\n  return error;\n}\n","// eslint-disable-next-line @typescript-eslint/unbound-method\nconst toString = Object.prototype.toString;\n/**\n * Checks if an object is an instance of an Array (array or typed array, except those that contain bigint values).\n *\n * @param value - Object to check.\n * @returns True if the object is an array or a typed array.\n */\nexport function isAnyArray(value) {\n    const tag = toString.call(value);\n    return tag.endsWith('Array]') && !tag.includes('Big');\n}\n//# sourceMappingURL=index.js.map","import { isAnyArray } from 'is-any-array';\n\nfunction max(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!isAnyArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var _options$fromIndex = options.fromIndex,\n      fromIndex = _options$fromIndex === void 0 ? 0 : _options$fromIndex,\n      _options$toIndex = options.toIndex,\n      toIndex = _options$toIndex === void 0 ? input.length : _options$toIndex;\n\n  if (fromIndex < 0 || fromIndex >= input.length || !Number.isInteger(fromIndex)) {\n    throw new Error('fromIndex must be a positive integer smaller than length');\n  }\n\n  if (toIndex <= fromIndex || toIndex > input.length || !Number.isInteger(toIndex)) {\n    throw new Error('toIndex must be an integer greater than fromIndex and at most equal to length');\n  }\n\n  var maxValue = input[fromIndex];\n\n  for (var i = fromIndex + 1; i < toIndex; i++) {\n    if (input[i] > maxValue) maxValue = input[i];\n  }\n\n  return maxValue;\n}\n\nexport { max as default };\n","import { isAnyArray } from 'is-any-array';\n\nfunction min(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!isAnyArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var _options$fromIndex = options.fromIndex,\n      fromIndex = _options$fromIndex === void 0 ? 0 : _options$fromIndex,\n      _options$toIndex = options.toIndex,\n      toIndex = _options$toIndex === void 0 ? input.length : _options$toIndex;\n\n  if (fromIndex < 0 || fromIndex >= input.length || !Number.isInteger(fromIndex)) {\n    throw new Error('fromIndex must be a positive integer smaller than length');\n  }\n\n  if (toIndex <= fromIndex || toIndex > input.length || !Number.isInteger(toIndex)) {\n    throw new Error('toIndex must be an integer greater than fromIndex and at most equal to length');\n  }\n\n  var minValue = input[fromIndex];\n\n  for (var i = fromIndex + 1; i < toIndex; i++) {\n    if (input[i] < minValue) minValue = input[i];\n  }\n\n  return minValue;\n}\n\nexport { min as default };\n","import { isAnyArray } from 'is-any-array';\nimport max from 'ml-array-max';\nimport min from 'ml-array-min';\n\nfunction rescale(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!isAnyArray(input)) {\n    throw new TypeError('input must be an array');\n  } else if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var output;\n\n  if (options.output !== undefined) {\n    if (!isAnyArray(options.output)) {\n      throw new TypeError('output option must be an array if specified');\n    }\n\n    output = options.output;\n  } else {\n    output = new Array(input.length);\n  }\n\n  var currentMin = min(input);\n  var currentMax = max(input);\n\n  if (currentMin === currentMax) {\n    throw new RangeError('minimum and maximum input values are equal. Cannot rescale a constant array');\n  }\n\n  var _options$min = options.min,\n      minValue = _options$min === void 0 ? options.autoMinMax ? currentMin : 0 : _options$min,\n      _options$max = options.max,\n      maxValue = _options$max === void 0 ? options.autoMinMax ? currentMax : 1 : _options$max;\n\n  if (minValue >= maxValue) {\n    throw new RangeError('min option must be smaller than max option');\n  }\n\n  var factor = (maxValue - minValue) / (currentMax - currentMin);\n\n  for (var i = 0; i < input.length; i++) {\n    output[i] = (input[i] - currentMin) * factor + minValue;\n  }\n\n  return output;\n}\n\nexport { rescale as default };\n","const indent = ' '.repeat(2);\nconst indentData = ' '.repeat(4);\n\nexport function inspectMatrix() {\n  return inspectMatrixWithOptions(this);\n}\n\nexport function inspectMatrixWithOptions(matrix, options = {}) {\n  const {\n    maxRows = 15,\n    maxColumns = 10,\n    maxNumSize = 8,\n    padMinus = 'auto',\n  } = options;\n  return `${matrix.constructor.name} {\n${indent}[\n${indentData}${inspectData(matrix, maxRows, maxColumns, maxNumSize, padMinus)}\n${indent}]\n${indent}rows: ${matrix.rows}\n${indent}columns: ${matrix.columns}\n}`;\n}\n\nfunction inspectData(matrix, maxRows, maxColumns, maxNumSize, padMinus) {\n  const { rows, columns } = matrix;\n  const maxI = Math.min(rows, maxRows);\n  const maxJ = Math.min(columns, maxColumns);\n  const result = [];\n\n  if (padMinus === 'auto') {\n    padMinus = false;\n    loop: for (let i = 0; i < maxI; i++) {\n      for (let j = 0; j < maxJ; j++) {\n        if (matrix.get(i, j) < 0) {\n          padMinus = true;\n          break loop;\n        }\n      }\n    }\n  }\n\n  for (let i = 0; i < maxI; i++) {\n    let line = [];\n    for (let j = 0; j < maxJ; j++) {\n      line.push(formatNumber(matrix.get(i, j), maxNumSize, padMinus));\n    }\n    result.push(`${line.join(' ')}`);\n  }\n  if (maxJ !== columns) {\n    result[result.length - 1] += ` ... ${columns - maxColumns} more columns`;\n  }\n  if (maxI !== rows) {\n    result.push(`... ${rows - maxRows} more rows`);\n  }\n  return result.join(`\\n${indentData}`);\n}\n\nfunction formatNumber(num, maxNumSize, padMinus) {\n  return (\n    num >= 0 && padMinus\n      ? ` ${formatNumber2(num, maxNumSize - 1)}`\n      : formatNumber2(num, maxNumSize)\n  ).padEnd(maxNumSize);\n}\n\nfunction formatNumber2(num, len) {\n  // small.length numbers should be as is\n  let str = num.toString();\n  if (str.length <= len) return str;\n\n  // (7)'0.00123' is better then (7)'1.23e-2'\n  // (8)'0.000123' is worse then (7)'1.23e-3',\n  let fix = num.toFixed(len);\n  if (fix.length > len) {\n    fix = num.toFixed(Math.max(0, len - (fix.length - len)));\n  }\n  if (\n    fix.length <= len &&\n    !fix.startsWith('0.000') &&\n    !fix.startsWith('-0.000')\n  ) {\n    return fix;\n  }\n\n  // well, if it's still too long the user should've used longer numbers\n  let exp = num.toExponential(len);\n  if (exp.length > len) {\n    exp = num.toExponential(Math.max(0, len - (exp.length - len)));\n  }\n  return exp.slice(0);\n}\n","export function installMathOperations(AbstractMatrix, Matrix) {\n  AbstractMatrix.prototype.add = function add(value) {\n    if (typeof value === 'number') return this.addS(value);\n    return this.addM(value);\n  };\n\n  AbstractMatrix.prototype.addS = function addS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.addM = function addM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.add = function add(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.add(value);\n  };\n\n  AbstractMatrix.prototype.sub = function sub(value) {\n    if (typeof value === 'number') return this.subS(value);\n    return this.subM(value);\n  };\n\n  AbstractMatrix.prototype.subS = function subS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.subM = function subM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sub = function sub(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sub(value);\n  };\n  AbstractMatrix.prototype.subtract = AbstractMatrix.prototype.sub;\n  AbstractMatrix.prototype.subtractS = AbstractMatrix.prototype.subS;\n  AbstractMatrix.prototype.subtractM = AbstractMatrix.prototype.subM;\n  AbstractMatrix.subtract = AbstractMatrix.sub;\n\n  AbstractMatrix.prototype.mul = function mul(value) {\n    if (typeof value === 'number') return this.mulS(value);\n    return this.mulM(value);\n  };\n\n  AbstractMatrix.prototype.mulS = function mulS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.mulM = function mulM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.mul = function mul(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.mul(value);\n  };\n  AbstractMatrix.prototype.multiply = AbstractMatrix.prototype.mul;\n  AbstractMatrix.prototype.multiplyS = AbstractMatrix.prototype.mulS;\n  AbstractMatrix.prototype.multiplyM = AbstractMatrix.prototype.mulM;\n  AbstractMatrix.multiply = AbstractMatrix.mul;\n\n  AbstractMatrix.prototype.div = function div(value) {\n    if (typeof value === 'number') return this.divS(value);\n    return this.divM(value);\n  };\n\n  AbstractMatrix.prototype.divS = function divS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.divM = function divM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.div = function div(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.div(value);\n  };\n  AbstractMatrix.prototype.divide = AbstractMatrix.prototype.div;\n  AbstractMatrix.prototype.divideS = AbstractMatrix.prototype.divS;\n  AbstractMatrix.prototype.divideM = AbstractMatrix.prototype.divM;\n  AbstractMatrix.divide = AbstractMatrix.div;\n\n  AbstractMatrix.prototype.mod = function mod(value) {\n    if (typeof value === 'number') return this.modS(value);\n    return this.modM(value);\n  };\n\n  AbstractMatrix.prototype.modS = function modS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) % value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.modM = function modM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) % matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.mod = function mod(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.mod(value);\n  };\n  AbstractMatrix.prototype.modulus = AbstractMatrix.prototype.mod;\n  AbstractMatrix.prototype.modulusS = AbstractMatrix.prototype.modS;\n  AbstractMatrix.prototype.modulusM = AbstractMatrix.prototype.modM;\n  AbstractMatrix.modulus = AbstractMatrix.mod;\n\n  AbstractMatrix.prototype.and = function and(value) {\n    if (typeof value === 'number') return this.andS(value);\n    return this.andM(value);\n  };\n\n  AbstractMatrix.prototype.andS = function andS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) & value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.andM = function andM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) & matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.and = function and(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.and(value);\n  };\n\n  AbstractMatrix.prototype.or = function or(value) {\n    if (typeof value === 'number') return this.orS(value);\n    return this.orM(value);\n  };\n\n  AbstractMatrix.prototype.orS = function orS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) | value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.orM = function orM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) | matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.or = function or(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.or(value);\n  };\n\n  AbstractMatrix.prototype.xor = function xor(value) {\n    if (typeof value === 'number') return this.xorS(value);\n    return this.xorM(value);\n  };\n\n  AbstractMatrix.prototype.xorS = function xorS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) ^ value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.xorM = function xorM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) ^ matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.xor = function xor(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.xor(value);\n  };\n\n  AbstractMatrix.prototype.leftShift = function leftShift(value) {\n    if (typeof value === 'number') return this.leftShiftS(value);\n    return this.leftShiftM(value);\n  };\n\n  AbstractMatrix.prototype.leftShiftS = function leftShiftS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) << value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.leftShiftM = function leftShiftM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) << matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.leftShift = function leftShift(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.leftShift(value);\n  };\n\n  AbstractMatrix.prototype.signPropagatingRightShift = function signPropagatingRightShift(value) {\n    if (typeof value === 'number') return this.signPropagatingRightShiftS(value);\n    return this.signPropagatingRightShiftM(value);\n  };\n\n  AbstractMatrix.prototype.signPropagatingRightShiftS = function signPropagatingRightShiftS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >> value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.signPropagatingRightShiftM = function signPropagatingRightShiftM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >> matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.signPropagatingRightShift = function signPropagatingRightShift(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.signPropagatingRightShift(value);\n  };\n\n  AbstractMatrix.prototype.rightShift = function rightShift(value) {\n    if (typeof value === 'number') return this.rightShiftS(value);\n    return this.rightShiftM(value);\n  };\n\n  AbstractMatrix.prototype.rightShiftS = function rightShiftS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >>> value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.rightShiftM = function rightShiftM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >>> matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.rightShift = function rightShift(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.rightShift(value);\n  };\n  AbstractMatrix.prototype.zeroFillRightShift = AbstractMatrix.prototype.rightShift;\n  AbstractMatrix.prototype.zeroFillRightShiftS = AbstractMatrix.prototype.rightShiftS;\n  AbstractMatrix.prototype.zeroFillRightShiftM = AbstractMatrix.prototype.rightShiftM;\n  AbstractMatrix.zeroFillRightShift = AbstractMatrix.rightShift;\n\n  AbstractMatrix.prototype.not = function not() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, ~(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.not = function not(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.not();\n  };\n\n  AbstractMatrix.prototype.abs = function abs() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.abs(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.abs = function abs(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.abs();\n  };\n\n  AbstractMatrix.prototype.acos = function acos() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.acos(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.acos = function acos(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.acos();\n  };\n\n  AbstractMatrix.prototype.acosh = function acosh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.acosh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.acosh = function acosh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.acosh();\n  };\n\n  AbstractMatrix.prototype.asin = function asin() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.asin(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.asin = function asin(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.asin();\n  };\n\n  AbstractMatrix.prototype.asinh = function asinh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.asinh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.asinh = function asinh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.asinh();\n  };\n\n  AbstractMatrix.prototype.atan = function atan() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.atan(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.atan = function atan(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.atan();\n  };\n\n  AbstractMatrix.prototype.atanh = function atanh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.atanh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.atanh = function atanh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.atanh();\n  };\n\n  AbstractMatrix.prototype.cbrt = function cbrt() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.cbrt(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.cbrt = function cbrt(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.cbrt();\n  };\n\n  AbstractMatrix.prototype.ceil = function ceil() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.ceil(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.ceil = function ceil(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.ceil();\n  };\n\n  AbstractMatrix.prototype.clz32 = function clz32() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.clz32(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.clz32 = function clz32(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.clz32();\n  };\n\n  AbstractMatrix.prototype.cos = function cos() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.cos(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.cos = function cos(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.cos();\n  };\n\n  AbstractMatrix.prototype.cosh = function cosh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.cosh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.cosh = function cosh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.cosh();\n  };\n\n  AbstractMatrix.prototype.exp = function exp() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.exp(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.exp = function exp(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.exp();\n  };\n\n  AbstractMatrix.prototype.expm1 = function expm1() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.expm1(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.expm1 = function expm1(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.expm1();\n  };\n\n  AbstractMatrix.prototype.floor = function floor() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.floor(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.floor = function floor(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.floor();\n  };\n\n  AbstractMatrix.prototype.fround = function fround() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.fround(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.fround = function fround(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.fround();\n  };\n\n  AbstractMatrix.prototype.log = function log() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log = function log(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log();\n  };\n\n  AbstractMatrix.prototype.log1p = function log1p() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log1p(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log1p = function log1p(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log1p();\n  };\n\n  AbstractMatrix.prototype.log10 = function log10() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log10(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log10 = function log10(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log10();\n  };\n\n  AbstractMatrix.prototype.log2 = function log2() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log2(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log2 = function log2(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log2();\n  };\n\n  AbstractMatrix.prototype.round = function round() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.round(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.round = function round(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.round();\n  };\n\n  AbstractMatrix.prototype.sign = function sign() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sign(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sign = function sign(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sign();\n  };\n\n  AbstractMatrix.prototype.sin = function sin() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sin(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sin = function sin(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sin();\n  };\n\n  AbstractMatrix.prototype.sinh = function sinh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sinh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sinh = function sinh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sinh();\n  };\n\n  AbstractMatrix.prototype.sqrt = function sqrt() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sqrt(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sqrt = function sqrt(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sqrt();\n  };\n\n  AbstractMatrix.prototype.tan = function tan() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.tan(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.tan = function tan(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.tan();\n  };\n\n  AbstractMatrix.prototype.tanh = function tanh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.tanh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.tanh = function tanh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.tanh();\n  };\n\n  AbstractMatrix.prototype.trunc = function trunc() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.trunc(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.trunc = function trunc(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.trunc();\n  };\n\n  AbstractMatrix.pow = function pow(matrix, arg0) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.pow(arg0);\n  };\n\n  AbstractMatrix.prototype.pow = function pow(value) {\n    if (typeof value === 'number') return this.powS(value);\n    return this.powM(value);\n  };\n\n  AbstractMatrix.prototype.powS = function powS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.pow(this.get(i, j), value));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.powM = function powM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.pow(this.get(i, j), matrix.get(i, j)));\n      }\n    }\n    return this;\n  };\n}\n","import { isAnyArray } from 'is-any-array';\n\n/**\n * @private\n * Check that a row index is not out of bounds\n * @param {Matrix} matrix\n * @param {number} index\n * @param {boolean} [outer]\n */\nexport function checkRowIndex(matrix, index, outer) {\n  let max = outer ? matrix.rows : matrix.rows - 1;\n  if (index < 0 || index > max) {\n    throw new RangeError('Row index out of range');\n  }\n}\n\n/**\n * @private\n * Check that a column index is not out of bounds\n * @param {Matrix} matrix\n * @param {number} index\n * @param {boolean} [outer]\n */\nexport function checkColumnIndex(matrix, index, outer) {\n  let max = outer ? matrix.columns : matrix.columns - 1;\n  if (index < 0 || index > max) {\n    throw new RangeError('Column index out of range');\n  }\n}\n\n/**\n * @private\n * Check that the provided vector is an array with the right length\n * @param {Matrix} matrix\n * @param {Array|Matrix} vector\n * @return {Array}\n * @throws {RangeError}\n */\nexport function checkRowVector(matrix, vector) {\n  if (vector.to1DArray) {\n    vector = vector.to1DArray();\n  }\n  if (vector.length !== matrix.columns) {\n    throw new RangeError(\n      'vector size must be the same as the number of columns',\n    );\n  }\n  return vector;\n}\n\n/**\n * @private\n * Check that the provided vector is an array with the right length\n * @param {Matrix} matrix\n * @param {Array|Matrix} vector\n * @return {Array}\n * @throws {RangeError}\n */\nexport function checkColumnVector(matrix, vector) {\n  if (vector.to1DArray) {\n    vector = vector.to1DArray();\n  }\n  if (vector.length !== matrix.rows) {\n    throw new RangeError('vector size must be the same as the number of rows');\n  }\n  return vector;\n}\n\nexport function checkRowIndices(matrix, rowIndices) {\n  if (!isAnyArray(rowIndices)) {\n    throw new TypeError('row indices must be an array');\n  }\n\n  for (let i = 0; i < rowIndices.length; i++) {\n    if (rowIndices[i] < 0 || rowIndices[i] >= matrix.rows) {\n      throw new RangeError('row indices are out of range');\n    }\n  }\n}\n\nexport function checkColumnIndices(matrix, columnIndices) {\n  if (!isAnyArray(columnIndices)) {\n    throw new TypeError('column indices must be an array');\n  }\n\n  for (let i = 0; i < columnIndices.length; i++) {\n    if (columnIndices[i] < 0 || columnIndices[i] >= matrix.columns) {\n      throw new RangeError('column indices are out of range');\n    }\n  }\n}\n\nexport function checkRange(matrix, startRow, endRow, startColumn, endColumn) {\n  if (arguments.length !== 5) {\n    throw new RangeError('expected 4 arguments');\n  }\n  checkNumber('startRow', startRow);\n  checkNumber('endRow', endRow);\n  checkNumber('startColumn', startColumn);\n  checkNumber('endColumn', endColumn);\n  if (\n    startRow > endRow ||\n    startColumn > endColumn ||\n    startRow < 0 ||\n    startRow >= matrix.rows ||\n    endRow < 0 ||\n    endRow >= matrix.rows ||\n    startColumn < 0 ||\n    startColumn >= matrix.columns ||\n    endColumn < 0 ||\n    endColumn >= matrix.columns\n  ) {\n    throw new RangeError('Submatrix indices are out of range');\n  }\n}\n\nexport function newArray(length, value = 0) {\n  let array = [];\n  for (let i = 0; i < length; i++) {\n    array.push(value);\n  }\n  return array;\n}\n\nfunction checkNumber(name, value) {\n  if (typeof value !== 'number') {\n    throw new TypeError(`${name} must be a number`);\n  }\n}\n\nexport function checkNonEmpty(matrix) {\n  if (matrix.isEmpty()) {\n    throw new Error('Empty matrix has no elements to index');\n  }\n}\n","import { newArray } from './util';\n\nexport function sumByRow(matrix) {\n  let sum = newArray(matrix.rows);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[i] += matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function sumByColumn(matrix) {\n  let sum = newArray(matrix.columns);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[j] += matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function sumAll(matrix) {\n  let v = 0;\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      v += matrix.get(i, j);\n    }\n  }\n  return v;\n}\n\nexport function productByRow(matrix) {\n  let sum = newArray(matrix.rows, 1);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[i] *= matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function productByColumn(matrix) {\n  let sum = newArray(matrix.columns, 1);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[j] *= matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function productAll(matrix) {\n  let v = 1;\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      v *= matrix.get(i, j);\n    }\n  }\n  return v;\n}\n\nexport function varianceByRow(matrix, unbiased, mean) {\n  const rows = matrix.rows;\n  const cols = matrix.columns;\n  const variance = [];\n\n  for (let i = 0; i < rows; i++) {\n    let sum1 = 0;\n    let sum2 = 0;\n    let x = 0;\n    for (let j = 0; j < cols; j++) {\n      x = matrix.get(i, j) - mean[i];\n      sum1 += x;\n      sum2 += x * x;\n    }\n    if (unbiased) {\n      variance.push((sum2 - (sum1 * sum1) / cols) / (cols - 1));\n    } else {\n      variance.push((sum2 - (sum1 * sum1) / cols) / cols);\n    }\n  }\n  return variance;\n}\n\nexport function varianceByColumn(matrix, unbiased, mean) {\n  const rows = matrix.rows;\n  const cols = matrix.columns;\n  const variance = [];\n\n  for (let j = 0; j < cols; j++) {\n    let sum1 = 0;\n    let sum2 = 0;\n    let x = 0;\n    for (let i = 0; i < rows; i++) {\n      x = matrix.get(i, j) - mean[j];\n      sum1 += x;\n      sum2 += x * x;\n    }\n    if (unbiased) {\n      variance.push((sum2 - (sum1 * sum1) / rows) / (rows - 1));\n    } else {\n      variance.push((sum2 - (sum1 * sum1) / rows) / rows);\n    }\n  }\n  return variance;\n}\n\nexport function varianceAll(matrix, unbiased, mean) {\n  const rows = matrix.rows;\n  const cols = matrix.columns;\n  const size = rows * cols;\n\n  let sum1 = 0;\n  let sum2 = 0;\n  let x = 0;\n  for (let i = 0; i < rows; i++) {\n    for (let j = 0; j < cols; j++) {\n      x = matrix.get(i, j) - mean;\n      sum1 += x;\n      sum2 += x * x;\n    }\n  }\n  if (unbiased) {\n    return (sum2 - (sum1 * sum1) / size) / (size - 1);\n  } else {\n    return (sum2 - (sum1 * sum1) / size) / size;\n  }\n}\n\nexport function centerByRow(matrix, mean) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) - mean[i]);\n    }\n  }\n}\n\nexport function centerByColumn(matrix, mean) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) - mean[j]);\n    }\n  }\n}\n\nexport function centerAll(matrix, mean) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) - mean);\n    }\n  }\n}\n\nexport function getScaleByRow(matrix) {\n  const scale = [];\n  for (let i = 0; i < matrix.rows; i++) {\n    let sum = 0;\n    for (let j = 0; j < matrix.columns; j++) {\n      sum += Math.pow(matrix.get(i, j), 2) / (matrix.columns - 1);\n    }\n    scale.push(Math.sqrt(sum));\n  }\n  return scale;\n}\n\nexport function scaleByRow(matrix, scale) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) / scale[i]);\n    }\n  }\n}\n\nexport function getScaleByColumn(matrix) {\n  const scale = [];\n  for (let j = 0; j < matrix.columns; j++) {\n    let sum = 0;\n    for (let i = 0; i < matrix.rows; i++) {\n      sum += Math.pow(matrix.get(i, j), 2) / (matrix.rows - 1);\n    }\n    scale.push(Math.sqrt(sum));\n  }\n  return scale;\n}\n\nexport function scaleByColumn(matrix, scale) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) / scale[j]);\n    }\n  }\n}\n\nexport function getScaleAll(matrix) {\n  const divider = matrix.size - 1;\n  let sum = 0;\n  for (let j = 0; j < matrix.columns; j++) {\n    for (let i = 0; i < matrix.rows; i++) {\n      sum += Math.pow(matrix.get(i, j), 2) / divider;\n    }\n  }\n  return Math.sqrt(sum);\n}\n\nexport function scaleAll(matrix, scale) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) / scale);\n    }\n  }\n}\n","import { isAnyArray } from 'is-any-array';\nimport rescale from 'ml-array-rescale';\n\nimport { inspectMatrix, inspectMatrixWithOptions } from './inspect';\nimport { installMathOperations } from './mathOperations';\nimport {\n  sumByRow,\n  sumByColumn,\n  sumAll,\n  productByRow,\n  productByColumn,\n  productAll,\n  varianceByRow,\n  varianceByColumn,\n  varianceAll,\n  centerByRow,\n  centerByColumn,\n  centerAll,\n  scaleByRow,\n  scaleByColumn,\n  scaleAll,\n  getScaleByRow,\n  getScaleByColumn,\n  getScaleAll,\n} from './stat';\nimport {\n  checkRowVector,\n  checkRowIndex,\n  checkColumnIndex,\n  checkColumnVector,\n  checkRange,\n  checkNonEmpty,\n  checkRowIndices,\n  checkColumnIndices,\n} from './util';\n\nexport class AbstractMatrix {\n  static from1DArray(newRows, newColumns, newData) {\n    let length = newRows * newColumns;\n    if (length !== newData.length) {\n      throw new RangeError('data length does not match given dimensions');\n    }\n    let newMatrix = new Matrix(newRows, newColumns);\n    for (let row = 0; row < newRows; row++) {\n      for (let column = 0; column < newColumns; column++) {\n        newMatrix.set(row, column, newData[row * newColumns + column]);\n      }\n    }\n    return newMatrix;\n  }\n\n  static rowVector(newData) {\n    let vector = new Matrix(1, newData.length);\n    for (let i = 0; i < newData.length; i++) {\n      vector.set(0, i, newData[i]);\n    }\n    return vector;\n  }\n\n  static columnVector(newData) {\n    let vector = new Matrix(newData.length, 1);\n    for (let i = 0; i < newData.length; i++) {\n      vector.set(i, 0, newData[i]);\n    }\n    return vector;\n  }\n\n  static zeros(rows, columns) {\n    return new Matrix(rows, columns);\n  }\n\n  static ones(rows, columns) {\n    return new Matrix(rows, columns).fill(1);\n  }\n\n  static rand(rows, columns, options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { random = Math.random } = options;\n    let matrix = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        matrix.set(i, j, random());\n      }\n    }\n    return matrix;\n  }\n\n  static randInt(rows, columns, options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { min = 0, max = 1000, random = Math.random } = options;\n    if (!Number.isInteger(min)) throw new TypeError('min must be an integer');\n    if (!Number.isInteger(max)) throw new TypeError('max must be an integer');\n    if (min >= max) throw new RangeError('min must be smaller than max');\n    let interval = max - min;\n    let matrix = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        let value = min + Math.round(random() * interval);\n        matrix.set(i, j, value);\n      }\n    }\n    return matrix;\n  }\n\n  static eye(rows, columns, value) {\n    if (columns === undefined) columns = rows;\n    if (value === undefined) value = 1;\n    let min = Math.min(rows, columns);\n    let matrix = this.zeros(rows, columns);\n    for (let i = 0; i < min; i++) {\n      matrix.set(i, i, value);\n    }\n    return matrix;\n  }\n\n  static diag(data, rows, columns) {\n    let l = data.length;\n    if (rows === undefined) rows = l;\n    if (columns === undefined) columns = rows;\n    let min = Math.min(l, rows, columns);\n    let matrix = this.zeros(rows, columns);\n    for (let i = 0; i < min; i++) {\n      matrix.set(i, i, data[i]);\n    }\n    return matrix;\n  }\n\n  static min(matrix1, matrix2) {\n    matrix1 = this.checkMatrix(matrix1);\n    matrix2 = this.checkMatrix(matrix2);\n    let rows = matrix1.rows;\n    let columns = matrix1.columns;\n    let result = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        result.set(i, j, Math.min(matrix1.get(i, j), matrix2.get(i, j)));\n      }\n    }\n    return result;\n  }\n\n  static max(matrix1, matrix2) {\n    matrix1 = this.checkMatrix(matrix1);\n    matrix2 = this.checkMatrix(matrix2);\n    let rows = matrix1.rows;\n    let columns = matrix1.columns;\n    let result = new this(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        result.set(i, j, Math.max(matrix1.get(i, j), matrix2.get(i, j)));\n      }\n    }\n    return result;\n  }\n\n  static checkMatrix(value) {\n    return AbstractMatrix.isMatrix(value) ? value : new Matrix(value);\n  }\n\n  static isMatrix(value) {\n    return value != null && value.klass === 'Matrix';\n  }\n\n  get size() {\n    return this.rows * this.columns;\n  }\n\n  apply(callback) {\n    if (typeof callback !== 'function') {\n      throw new TypeError('callback must be a function');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        callback.call(this, i, j);\n      }\n    }\n    return this;\n  }\n\n  to1DArray() {\n    let array = [];\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        array.push(this.get(i, j));\n      }\n    }\n    return array;\n  }\n\n  to2DArray() {\n    let copy = [];\n    for (let i = 0; i < this.rows; i++) {\n      copy.push([]);\n      for (let j = 0; j < this.columns; j++) {\n        copy[i].push(this.get(i, j));\n      }\n    }\n    return copy;\n  }\n\n  toJSON() {\n    return this.to2DArray();\n  }\n\n  isRowVector() {\n    return this.rows === 1;\n  }\n\n  isColumnVector() {\n    return this.columns === 1;\n  }\n\n  isVector() {\n    return this.rows === 1 || this.columns === 1;\n  }\n\n  isSquare() {\n    return this.rows === this.columns;\n  }\n\n  isEmpty() {\n    return this.rows === 0 || this.columns === 0;\n  }\n\n  isSymmetric() {\n    if (this.isSquare()) {\n      for (let i = 0; i < this.rows; i++) {\n        for (let j = 0; j <= i; j++) {\n          if (this.get(i, j) !== this.get(j, i)) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n    return false;\n  }\n\n  isEchelonForm() {\n    let i = 0;\n    let j = 0;\n    let previousColumn = -1;\n    let isEchelonForm = true;\n    let checked = false;\n    while (i < this.rows && isEchelonForm) {\n      j = 0;\n      checked = false;\n      while (j < this.columns && checked === false) {\n        if (this.get(i, j) === 0) {\n          j++;\n        } else if (this.get(i, j) === 1 && j > previousColumn) {\n          checked = true;\n          previousColumn = j;\n        } else {\n          isEchelonForm = false;\n          checked = true;\n        }\n      }\n      i++;\n    }\n    return isEchelonForm;\n  }\n\n  isReducedEchelonForm() {\n    let i = 0;\n    let j = 0;\n    let previousColumn = -1;\n    let isReducedEchelonForm = true;\n    let checked = false;\n    while (i < this.rows && isReducedEchelonForm) {\n      j = 0;\n      checked = false;\n      while (j < this.columns && checked === false) {\n        if (this.get(i, j) === 0) {\n          j++;\n        } else if (this.get(i, j) === 1 && j > previousColumn) {\n          checked = true;\n          previousColumn = j;\n        } else {\n          isReducedEchelonForm = false;\n          checked = true;\n        }\n      }\n      for (let k = j + 1; k < this.rows; k++) {\n        if (this.get(i, k) !== 0) {\n          isReducedEchelonForm = false;\n        }\n      }\n      i++;\n    }\n    return isReducedEchelonForm;\n  }\n\n  echelonForm() {\n    let result = this.clone();\n    let h = 0;\n    let k = 0;\n    while (h < result.rows && k < result.columns) {\n      let iMax = h;\n      for (let i = h; i < result.rows; i++) {\n        if (result.get(i, k) > result.get(iMax, k)) {\n          iMax = i;\n        }\n      }\n      if (result.get(iMax, k) === 0) {\n        k++;\n      } else {\n        result.swapRows(h, iMax);\n        let tmp = result.get(h, k);\n        for (let j = k; j < result.columns; j++) {\n          result.set(h, j, result.get(h, j) / tmp);\n        }\n        for (let i = h + 1; i < result.rows; i++) {\n          let factor = result.get(i, k) / result.get(h, k);\n          result.set(i, k, 0);\n          for (let j = k + 1; j < result.columns; j++) {\n            result.set(i, j, result.get(i, j) - result.get(h, j) * factor);\n          }\n        }\n        h++;\n        k++;\n      }\n    }\n    return result;\n  }\n\n  reducedEchelonForm() {\n    let result = this.echelonForm();\n    let m = result.columns;\n    let n = result.rows;\n    let h = n - 1;\n    while (h >= 0) {\n      if (result.maxRow(h) === 0) {\n        h--;\n      } else {\n        let p = 0;\n        let pivot = false;\n        while (p < n && pivot === false) {\n          if (result.get(h, p) === 1) {\n            pivot = true;\n          } else {\n            p++;\n          }\n        }\n        for (let i = 0; i < h; i++) {\n          let factor = result.get(i, p);\n          for (let j = p; j < m; j++) {\n            let tmp = result.get(i, j) - factor * result.get(h, j);\n            result.set(i, j, tmp);\n          }\n        }\n        h--;\n      }\n    }\n    return result;\n  }\n\n  set() {\n    throw new Error('set method is unimplemented');\n  }\n\n  get() {\n    throw new Error('get method is unimplemented');\n  }\n\n  repeat(options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { rows = 1, columns = 1 } = options;\n    if (!Number.isInteger(rows) || rows <= 0) {\n      throw new TypeError('rows must be a positive integer');\n    }\n    if (!Number.isInteger(columns) || columns <= 0) {\n      throw new TypeError('columns must be a positive integer');\n    }\n    let matrix = new Matrix(this.rows * rows, this.columns * columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        matrix.setSubMatrix(this, this.rows * i, this.columns * j);\n      }\n    }\n    return matrix;\n  }\n\n  fill(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, value);\n      }\n    }\n    return this;\n  }\n\n  neg() {\n    return this.mulS(-1);\n  }\n\n  getRow(index) {\n    checkRowIndex(this, index);\n    let row = [];\n    for (let i = 0; i < this.columns; i++) {\n      row.push(this.get(index, i));\n    }\n    return row;\n  }\n\n  getRowVector(index) {\n    return Matrix.rowVector(this.getRow(index));\n  }\n\n  setRow(index, array) {\n    checkRowIndex(this, index);\n    array = checkRowVector(this, array);\n    for (let i = 0; i < this.columns; i++) {\n      this.set(index, i, array[i]);\n    }\n    return this;\n  }\n\n  swapRows(row1, row2) {\n    checkRowIndex(this, row1);\n    checkRowIndex(this, row2);\n    for (let i = 0; i < this.columns; i++) {\n      let temp = this.get(row1, i);\n      this.set(row1, i, this.get(row2, i));\n      this.set(row2, i, temp);\n    }\n    return this;\n  }\n\n  getColumn(index) {\n    checkColumnIndex(this, index);\n    let column = [];\n    for (let i = 0; i < this.rows; i++) {\n      column.push(this.get(i, index));\n    }\n    return column;\n  }\n\n  getColumnVector(index) {\n    return Matrix.columnVector(this.getColumn(index));\n  }\n\n  setColumn(index, array) {\n    checkColumnIndex(this, index);\n    array = checkColumnVector(this, array);\n    for (let i = 0; i < this.rows; i++) {\n      this.set(i, index, array[i]);\n    }\n    return this;\n  }\n\n  swapColumns(column1, column2) {\n    checkColumnIndex(this, column1);\n    checkColumnIndex(this, column2);\n    for (let i = 0; i < this.rows; i++) {\n      let temp = this.get(i, column1);\n      this.set(i, column1, this.get(i, column2));\n      this.set(i, column2, temp);\n    }\n    return this;\n  }\n\n  addRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + vector[j]);\n      }\n    }\n    return this;\n  }\n\n  subRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - vector[j]);\n      }\n    }\n    return this;\n  }\n\n  mulRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * vector[j]);\n      }\n    }\n    return this;\n  }\n\n  divRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / vector[j]);\n      }\n    }\n    return this;\n  }\n\n  addColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + vector[i]);\n      }\n    }\n    return this;\n  }\n\n  subColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - vector[i]);\n      }\n    }\n    return this;\n  }\n\n  mulColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * vector[i]);\n      }\n    }\n    return this;\n  }\n\n  divColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / vector[i]);\n      }\n    }\n    return this;\n  }\n\n  mulRow(index, value) {\n    checkRowIndex(this, index);\n    for (let i = 0; i < this.columns; i++) {\n      this.set(index, i, this.get(index, i) * value);\n    }\n    return this;\n  }\n\n  mulColumn(index, value) {\n    checkColumnIndex(this, index);\n    for (let i = 0; i < this.rows; i++) {\n      this.set(i, index, this.get(i, index) * value);\n    }\n    return this;\n  }\n\n  max(by) {\n    if (this.isEmpty()) {\n      return NaN;\n    }\n    switch (by) {\n      case 'row': {\n        const max = new Array(this.rows).fill(Number.NEGATIVE_INFINITY);\n        for (let row = 0; row < this.rows; row++) {\n          for (let column = 0; column < this.columns; column++) {\n            if (this.get(row, column) > max[row]) {\n              max[row] = this.get(row, column);\n            }\n          }\n        }\n        return max;\n      }\n      case 'column': {\n        const max = new Array(this.columns).fill(Number.NEGATIVE_INFINITY);\n        for (let row = 0; row < this.rows; row++) {\n          for (let column = 0; column < this.columns; column++) {\n            if (this.get(row, column) > max[column]) {\n              max[column] = this.get(row, column);\n            }\n          }\n        }\n        return max;\n      }\n      case undefined: {\n        let max = this.get(0, 0);\n        for (let row = 0; row < this.rows; row++) {\n          for (let column = 0; column < this.columns; column++) {\n            if (this.get(row, column) > max) {\n              max = this.get(row, column);\n            }\n          }\n        }\n        return max;\n      }\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  maxIndex() {\n    checkNonEmpty(this);\n    let v = this.get(0, 0);\n    let idx = [0, 0];\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) > v) {\n          v = this.get(i, j);\n          idx[0] = i;\n          idx[1] = j;\n        }\n      }\n    }\n    return idx;\n  }\n\n  min(by) {\n    if (this.isEmpty()) {\n      return NaN;\n    }\n\n    switch (by) {\n      case 'row': {\n        const min = new Array(this.rows).fill(Number.POSITIVE_INFINITY);\n        for (let row = 0; row < this.rows; row++) {\n          for (let column = 0; column < this.columns; column++) {\n            if (this.get(row, column) < min[row]) {\n              min[row] = this.get(row, column);\n            }\n          }\n        }\n        return min;\n      }\n      case 'column': {\n        const min = new Array(this.columns).fill(Number.POSITIVE_INFINITY);\n        for (let row = 0; row < this.rows; row++) {\n          for (let column = 0; column < this.columns; column++) {\n            if (this.get(row, column) < min[column]) {\n              min[column] = this.get(row, column);\n            }\n          }\n        }\n        return min;\n      }\n      case undefined: {\n        let min = this.get(0, 0);\n        for (let row = 0; row < this.rows; row++) {\n          for (let column = 0; column < this.columns; column++) {\n            if (this.get(row, column) < min) {\n              min = this.get(row, column);\n            }\n          }\n        }\n        return min;\n      }\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  minIndex() {\n    checkNonEmpty(this);\n    let v = this.get(0, 0);\n    let idx = [0, 0];\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) < v) {\n          v = this.get(i, j);\n          idx[0] = i;\n          idx[1] = j;\n        }\n      }\n    }\n    return idx;\n  }\n\n  maxRow(row) {\n    checkRowIndex(this, row);\n    if (this.isEmpty()) {\n      return NaN;\n    }\n    let v = this.get(row, 0);\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) > v) {\n        v = this.get(row, i);\n      }\n    }\n    return v;\n  }\n\n  maxRowIndex(row) {\n    checkRowIndex(this, row);\n    checkNonEmpty(this);\n    let v = this.get(row, 0);\n    let idx = [row, 0];\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) > v) {\n        v = this.get(row, i);\n        idx[1] = i;\n      }\n    }\n    return idx;\n  }\n\n  minRow(row) {\n    checkRowIndex(this, row);\n    if (this.isEmpty()) {\n      return NaN;\n    }\n    let v = this.get(row, 0);\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) < v) {\n        v = this.get(row, i);\n      }\n    }\n    return v;\n  }\n\n  minRowIndex(row) {\n    checkRowIndex(this, row);\n    checkNonEmpty(this);\n    let v = this.get(row, 0);\n    let idx = [row, 0];\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) < v) {\n        v = this.get(row, i);\n        idx[1] = i;\n      }\n    }\n    return idx;\n  }\n\n  maxColumn(column) {\n    checkColumnIndex(this, column);\n    if (this.isEmpty()) {\n      return NaN;\n    }\n    let v = this.get(0, column);\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) > v) {\n        v = this.get(i, column);\n      }\n    }\n    return v;\n  }\n\n  maxColumnIndex(column) {\n    checkColumnIndex(this, column);\n    checkNonEmpty(this);\n    let v = this.get(0, column);\n    let idx = [0, column];\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) > v) {\n        v = this.get(i, column);\n        idx[0] = i;\n      }\n    }\n    return idx;\n  }\n\n  minColumn(column) {\n    checkColumnIndex(this, column);\n    if (this.isEmpty()) {\n      return NaN;\n    }\n    let v = this.get(0, column);\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) < v) {\n        v = this.get(i, column);\n      }\n    }\n    return v;\n  }\n\n  minColumnIndex(column) {\n    checkColumnIndex(this, column);\n    checkNonEmpty(this);\n    let v = this.get(0, column);\n    let idx = [0, column];\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) < v) {\n        v = this.get(i, column);\n        idx[0] = i;\n      }\n    }\n    return idx;\n  }\n\n  diag() {\n    let min = Math.min(this.rows, this.columns);\n    let diag = [];\n    for (let i = 0; i < min; i++) {\n      diag.push(this.get(i, i));\n    }\n    return diag;\n  }\n\n  norm(type = 'frobenius') {\n    let result = 0;\n    if (type === 'max') {\n      return this.max();\n    } else if (type === 'frobenius') {\n      for (let i = 0; i < this.rows; i++) {\n        for (let j = 0; j < this.columns; j++) {\n          result = result + this.get(i, j) * this.get(i, j);\n        }\n      }\n      return Math.sqrt(result);\n    } else {\n      throw new RangeError(`unknown norm type: ${type}`);\n    }\n  }\n\n  cumulativeSum() {\n    let sum = 0;\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        sum += this.get(i, j);\n        this.set(i, j, sum);\n      }\n    }\n    return this;\n  }\n\n  dot(vector2) {\n    if (AbstractMatrix.isMatrix(vector2)) vector2 = vector2.to1DArray();\n    let vector1 = this.to1DArray();\n    if (vector1.length !== vector2.length) {\n      throw new RangeError('vectors do not have the same size');\n    }\n    let dot = 0;\n    for (let i = 0; i < vector1.length; i++) {\n      dot += vector1[i] * vector2[i];\n    }\n    return dot;\n  }\n\n  mmul(other) {\n    other = Matrix.checkMatrix(other);\n\n    let m = this.rows;\n    let n = this.columns;\n    let p = other.columns;\n\n    let result = new Matrix(m, p);\n\n    let Bcolj = new Float64Array(n);\n    for (let j = 0; j < p; j++) {\n      for (let k = 0; k < n; k++) {\n        Bcolj[k] = other.get(k, j);\n      }\n\n      for (let i = 0; i < m; i++) {\n        let s = 0;\n        for (let k = 0; k < n; k++) {\n          s += this.get(i, k) * Bcolj[k];\n        }\n\n        result.set(i, j, s);\n      }\n    }\n    return result;\n  }\n\n  strassen2x2(other) {\n    other = Matrix.checkMatrix(other);\n    let result = new Matrix(2, 2);\n    const a11 = this.get(0, 0);\n    const b11 = other.get(0, 0);\n    const a12 = this.get(0, 1);\n    const b12 = other.get(0, 1);\n    const a21 = this.get(1, 0);\n    const b21 = other.get(1, 0);\n    const a22 = this.get(1, 1);\n    const b22 = other.get(1, 1);\n\n    // Compute intermediate values.\n    const m1 = (a11 + a22) * (b11 + b22);\n    const m2 = (a21 + a22) * b11;\n    const m3 = a11 * (b12 - b22);\n    const m4 = a22 * (b21 - b11);\n    const m5 = (a11 + a12) * b22;\n    const m6 = (a21 - a11) * (b11 + b12);\n    const m7 = (a12 - a22) * (b21 + b22);\n\n    // Combine intermediate values into the output.\n    const c00 = m1 + m4 - m5 + m7;\n    const c01 = m3 + m5;\n    const c10 = m2 + m4;\n    const c11 = m1 - m2 + m3 + m6;\n\n    result.set(0, 0, c00);\n    result.set(0, 1, c01);\n    result.set(1, 0, c10);\n    result.set(1, 1, c11);\n    return result;\n  }\n\n  strassen3x3(other) {\n    other = Matrix.checkMatrix(other);\n    let result = new Matrix(3, 3);\n\n    const a00 = this.get(0, 0);\n    const a01 = this.get(0, 1);\n    const a02 = this.get(0, 2);\n    const a10 = this.get(1, 0);\n    const a11 = this.get(1, 1);\n    const a12 = this.get(1, 2);\n    const a20 = this.get(2, 0);\n    const a21 = this.get(2, 1);\n    const a22 = this.get(2, 2);\n\n    const b00 = other.get(0, 0);\n    const b01 = other.get(0, 1);\n    const b02 = other.get(0, 2);\n    const b10 = other.get(1, 0);\n    const b11 = other.get(1, 1);\n    const b12 = other.get(1, 2);\n    const b20 = other.get(2, 0);\n    const b21 = other.get(2, 1);\n    const b22 = other.get(2, 2);\n\n    const m1 = (a00 + a01 + a02 - a10 - a11 - a21 - a22) * b11;\n    const m2 = (a00 - a10) * (-b01 + b11);\n    const m3 = a11 * (-b00 + b01 + b10 - b11 - b12 - b20 + b22);\n    const m4 = (-a00 + a10 + a11) * (b00 - b01 + b11);\n    const m5 = (a10 + a11) * (-b00 + b01);\n    const m6 = a00 * b00;\n    const m7 = (-a00 + a20 + a21) * (b00 - b02 + b12);\n    const m8 = (-a00 + a20) * (b02 - b12);\n    const m9 = (a20 + a21) * (-b00 + b02);\n    const m10 = (a00 + a01 + a02 - a11 - a12 - a20 - a21) * b12;\n    const m11 = a21 * (-b00 + b02 + b10 - b11 - b12 - b20 + b21);\n    const m12 = (-a02 + a21 + a22) * (b11 + b20 - b21);\n    const m13 = (a02 - a22) * (b11 - b21);\n    const m14 = a02 * b20;\n    const m15 = (a21 + a22) * (-b20 + b21);\n    const m16 = (-a02 + a11 + a12) * (b12 + b20 - b22);\n    const m17 = (a02 - a12) * (b12 - b22);\n    const m18 = (a11 + a12) * (-b20 + b22);\n    const m19 = a01 * b10;\n    const m20 = a12 * b21;\n    const m21 = a10 * b02;\n    const m22 = a20 * b01;\n    const m23 = a22 * b22;\n\n    const c00 = m6 + m14 + m19;\n    const c01 = m1 + m4 + m5 + m6 + m12 + m14 + m15;\n    const c02 = m6 + m7 + m9 + m10 + m14 + m16 + m18;\n    const c10 = m2 + m3 + m4 + m6 + m14 + m16 + m17;\n    const c11 = m2 + m4 + m5 + m6 + m20;\n    const c12 = m14 + m16 + m17 + m18 + m21;\n    const c20 = m6 + m7 + m8 + m11 + m12 + m13 + m14;\n    const c21 = m12 + m13 + m14 + m15 + m22;\n    const c22 = m6 + m7 + m8 + m9 + m23;\n\n    result.set(0, 0, c00);\n    result.set(0, 1, c01);\n    result.set(0, 2, c02);\n    result.set(1, 0, c10);\n    result.set(1, 1, c11);\n    result.set(1, 2, c12);\n    result.set(2, 0, c20);\n    result.set(2, 1, c21);\n    result.set(2, 2, c22);\n    return result;\n  }\n\n  mmulStrassen(y) {\n    y = Matrix.checkMatrix(y);\n    let x = this.clone();\n    let r1 = x.rows;\n    let c1 = x.columns;\n    let r2 = y.rows;\n    let c2 = y.columns;\n    if (c1 !== r2) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        `Multiplying ${r1} x ${c1} and ${r2} x ${c2} matrix: dimensions do not match.`,\n      );\n    }\n\n    // Put a matrix into the top left of a matrix of zeros.\n    // `rows` and `cols` are the dimensions of the output matrix.\n    function embed(mat, rows, cols) {\n      let r = mat.rows;\n      let c = mat.columns;\n      if (r === rows && c === cols) {\n        return mat;\n      } else {\n        let resultat = AbstractMatrix.zeros(rows, cols);\n        resultat = resultat.setSubMatrix(mat, 0, 0);\n        return resultat;\n      }\n    }\n\n    // Make sure both matrices are the same size.\n    // This is exclusively for simplicity:\n    // this algorithm can be implemented with matrices of different sizes.\n\n    let r = Math.max(r1, r2);\n    let c = Math.max(c1, c2);\n    x = embed(x, r, c);\n    y = embed(y, r, c);\n\n    // Our recursive multiplication function.\n    function blockMult(a, b, rows, cols) {\n      // For small matrices, resort to naive multiplication.\n      if (rows <= 512 || cols <= 512) {\n        return a.mmul(b); // a is equivalent to this\n      }\n\n      // Apply dynamic padding.\n      if (rows % 2 === 1 && cols % 2 === 1) {\n        a = embed(a, rows + 1, cols + 1);\n        b = embed(b, rows + 1, cols + 1);\n      } else if (rows % 2 === 1) {\n        a = embed(a, rows + 1, cols);\n        b = embed(b, rows + 1, cols);\n      } else if (cols % 2 === 1) {\n        a = embed(a, rows, cols + 1);\n        b = embed(b, rows, cols + 1);\n      }\n\n      let halfRows = parseInt(a.rows / 2, 10);\n      let halfCols = parseInt(a.columns / 2, 10);\n      // Subdivide input matrices.\n      let a11 = a.subMatrix(0, halfRows - 1, 0, halfCols - 1);\n      let b11 = b.subMatrix(0, halfRows - 1, 0, halfCols - 1);\n\n      let a12 = a.subMatrix(0, halfRows - 1, halfCols, a.columns - 1);\n      let b12 = b.subMatrix(0, halfRows - 1, halfCols, b.columns - 1);\n\n      let a21 = a.subMatrix(halfRows, a.rows - 1, 0, halfCols - 1);\n      let b21 = b.subMatrix(halfRows, b.rows - 1, 0, halfCols - 1);\n\n      let a22 = a.subMatrix(halfRows, a.rows - 1, halfCols, a.columns - 1);\n      let b22 = b.subMatrix(halfRows, b.rows - 1, halfCols, b.columns - 1);\n\n      // Compute intermediate values.\n      let m1 = blockMult(\n        AbstractMatrix.add(a11, a22),\n        AbstractMatrix.add(b11, b22),\n        halfRows,\n        halfCols,\n      );\n      let m2 = blockMult(AbstractMatrix.add(a21, a22), b11, halfRows, halfCols);\n      let m3 = blockMult(a11, AbstractMatrix.sub(b12, b22), halfRows, halfCols);\n      let m4 = blockMult(a22, AbstractMatrix.sub(b21, b11), halfRows, halfCols);\n      let m5 = blockMult(AbstractMatrix.add(a11, a12), b22, halfRows, halfCols);\n      let m6 = blockMult(\n        AbstractMatrix.sub(a21, a11),\n        AbstractMatrix.add(b11, b12),\n        halfRows,\n        halfCols,\n      );\n      let m7 = blockMult(\n        AbstractMatrix.sub(a12, a22),\n        AbstractMatrix.add(b21, b22),\n        halfRows,\n        halfCols,\n      );\n\n      // Combine intermediate values into the output.\n      let c11 = AbstractMatrix.add(m1, m4);\n      c11.sub(m5);\n      c11.add(m7);\n      let c12 = AbstractMatrix.add(m3, m5);\n      let c21 = AbstractMatrix.add(m2, m4);\n      let c22 = AbstractMatrix.sub(m1, m2);\n      c22.add(m3);\n      c22.add(m6);\n\n      // Crop output to the desired size (undo dynamic padding).\n      let resultat = AbstractMatrix.zeros(2 * c11.rows, 2 * c11.columns);\n      resultat = resultat.setSubMatrix(c11, 0, 0);\n      resultat = resultat.setSubMatrix(c12, c11.rows, 0);\n      resultat = resultat.setSubMatrix(c21, 0, c11.columns);\n      resultat = resultat.setSubMatrix(c22, c11.rows, c11.columns);\n      return resultat.subMatrix(0, rows - 1, 0, cols - 1);\n    }\n\n    return blockMult(x, y, r, c);\n  }\n\n  scaleRows(options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { min = 0, max = 1 } = options;\n    if (!Number.isFinite(min)) throw new TypeError('min must be a number');\n    if (!Number.isFinite(max)) throw new TypeError('max must be a number');\n    if (min >= max) throw new RangeError('min must be smaller than max');\n    let newMatrix = new Matrix(this.rows, this.columns);\n    for (let i = 0; i < this.rows; i++) {\n      const row = this.getRow(i);\n      if (row.length > 0) {\n        rescale(row, { min, max, output: row });\n      }\n      newMatrix.setRow(i, row);\n    }\n    return newMatrix;\n  }\n\n  scaleColumns(options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { min = 0, max = 1 } = options;\n    if (!Number.isFinite(min)) throw new TypeError('min must be a number');\n    if (!Number.isFinite(max)) throw new TypeError('max must be a number');\n    if (min >= max) throw new RangeError('min must be smaller than max');\n    let newMatrix = new Matrix(this.rows, this.columns);\n    for (let i = 0; i < this.columns; i++) {\n      const column = this.getColumn(i);\n      if (column.length) {\n        rescale(column, {\n          min: min,\n          max: max,\n          output: column,\n        });\n      }\n      newMatrix.setColumn(i, column);\n    }\n    return newMatrix;\n  }\n\n  flipRows() {\n    const middle = Math.ceil(this.columns / 2);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < middle; j++) {\n        let first = this.get(i, j);\n        let last = this.get(i, this.columns - 1 - j);\n        this.set(i, j, last);\n        this.set(i, this.columns - 1 - j, first);\n      }\n    }\n    return this;\n  }\n\n  flipColumns() {\n    const middle = Math.ceil(this.rows / 2);\n    for (let j = 0; j < this.columns; j++) {\n      for (let i = 0; i < middle; i++) {\n        let first = this.get(i, j);\n        let last = this.get(this.rows - 1 - i, j);\n        this.set(i, j, last);\n        this.set(this.rows - 1 - i, j, first);\n      }\n    }\n    return this;\n  }\n\n  kroneckerProduct(other) {\n    other = Matrix.checkMatrix(other);\n\n    let m = this.rows;\n    let n = this.columns;\n    let p = other.rows;\n    let q = other.columns;\n\n    let result = new Matrix(m * p, n * q);\n    for (let i = 0; i < m; i++) {\n      for (let j = 0; j < n; j++) {\n        for (let k = 0; k < p; k++) {\n          for (let l = 0; l < q; l++) {\n            result.set(p * i + k, q * j + l, this.get(i, j) * other.get(k, l));\n          }\n        }\n      }\n    }\n    return result;\n  }\n\n  kroneckerSum(other) {\n    other = Matrix.checkMatrix(other);\n    if (!this.isSquare() || !other.isSquare()) {\n      throw new Error('Kronecker Sum needs two Square Matrices');\n    }\n    let m = this.rows;\n    let n = other.rows;\n    let AxI = this.kroneckerProduct(Matrix.eye(n, n));\n    let IxB = Matrix.eye(m, m).kroneckerProduct(other);\n    return AxI.add(IxB);\n  }\n\n  transpose() {\n    let result = new Matrix(this.columns, this.rows);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        result.set(j, i, this.get(i, j));\n      }\n    }\n    return result;\n  }\n\n  sortRows(compareFunction = compareNumbers) {\n    for (let i = 0; i < this.rows; i++) {\n      this.setRow(i, this.getRow(i).sort(compareFunction));\n    }\n    return this;\n  }\n\n  sortColumns(compareFunction = compareNumbers) {\n    for (let i = 0; i < this.columns; i++) {\n      this.setColumn(i, this.getColumn(i).sort(compareFunction));\n    }\n    return this;\n  }\n\n  subMatrix(startRow, endRow, startColumn, endColumn) {\n    checkRange(this, startRow, endRow, startColumn, endColumn);\n    let newMatrix = new Matrix(\n      endRow - startRow + 1,\n      endColumn - startColumn + 1,\n    );\n    for (let i = startRow; i <= endRow; i++) {\n      for (let j = startColumn; j <= endColumn; j++) {\n        newMatrix.set(i - startRow, j - startColumn, this.get(i, j));\n      }\n    }\n    return newMatrix;\n  }\n\n  subMatrixRow(indices, startColumn, endColumn) {\n    if (startColumn === undefined) startColumn = 0;\n    if (endColumn === undefined) endColumn = this.columns - 1;\n    if (\n      startColumn > endColumn ||\n      startColumn < 0 ||\n      startColumn >= this.columns ||\n      endColumn < 0 ||\n      endColumn >= this.columns\n    ) {\n      throw new RangeError('Argument out of range');\n    }\n\n    let newMatrix = new Matrix(indices.length, endColumn - startColumn + 1);\n    for (let i = 0; i < indices.length; i++) {\n      for (let j = startColumn; j <= endColumn; j++) {\n        if (indices[i] < 0 || indices[i] >= this.rows) {\n          throw new RangeError(`Row index out of range: ${indices[i]}`);\n        }\n        newMatrix.set(i, j - startColumn, this.get(indices[i], j));\n      }\n    }\n    return newMatrix;\n  }\n\n  subMatrixColumn(indices, startRow, endRow) {\n    if (startRow === undefined) startRow = 0;\n    if (endRow === undefined) endRow = this.rows - 1;\n    if (\n      startRow > endRow ||\n      startRow < 0 ||\n      startRow >= this.rows ||\n      endRow < 0 ||\n      endRow >= this.rows\n    ) {\n      throw new RangeError('Argument out of range');\n    }\n\n    let newMatrix = new Matrix(endRow - startRow + 1, indices.length);\n    for (let i = 0; i < indices.length; i++) {\n      for (let j = startRow; j <= endRow; j++) {\n        if (indices[i] < 0 || indices[i] >= this.columns) {\n          throw new RangeError(`Column index out of range: ${indices[i]}`);\n        }\n        newMatrix.set(j - startRow, i, this.get(j, indices[i]));\n      }\n    }\n    return newMatrix;\n  }\n\n  setSubMatrix(matrix, startRow, startColumn) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (matrix.isEmpty()) {\n      return this;\n    }\n    let endRow = startRow + matrix.rows - 1;\n    let endColumn = startColumn + matrix.columns - 1;\n    checkRange(this, startRow, endRow, startColumn, endColumn);\n    for (let i = 0; i < matrix.rows; i++) {\n      for (let j = 0; j < matrix.columns; j++) {\n        this.set(startRow + i, startColumn + j, matrix.get(i, j));\n      }\n    }\n    return this;\n  }\n\n  selection(rowIndices, columnIndices) {\n    checkRowIndices(this, rowIndices);\n    checkColumnIndices(this, columnIndices);\n    let newMatrix = new Matrix(rowIndices.length, columnIndices.length);\n    for (let i = 0; i < rowIndices.length; i++) {\n      let rowIndex = rowIndices[i];\n      for (let j = 0; j < columnIndices.length; j++) {\n        let columnIndex = columnIndices[j];\n        newMatrix.set(i, j, this.get(rowIndex, columnIndex));\n      }\n    }\n    return newMatrix;\n  }\n\n  trace() {\n    let min = Math.min(this.rows, this.columns);\n    let trace = 0;\n    for (let i = 0; i < min; i++) {\n      trace += this.get(i, i);\n    }\n    return trace;\n  }\n\n  clone() {\n    let newMatrix = new Matrix(this.rows, this.columns);\n    for (let row = 0; row < this.rows; row++) {\n      for (let column = 0; column < this.columns; column++) {\n        newMatrix.set(row, column, this.get(row, column));\n      }\n    }\n    return newMatrix;\n  }\n\n  sum(by) {\n    switch (by) {\n      case 'row':\n        return sumByRow(this);\n      case 'column':\n        return sumByColumn(this);\n      case undefined:\n        return sumAll(this);\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  product(by) {\n    switch (by) {\n      case 'row':\n        return productByRow(this);\n      case 'column':\n        return productByColumn(this);\n      case undefined:\n        return productAll(this);\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  mean(by) {\n    const sum = this.sum(by);\n    switch (by) {\n      case 'row': {\n        for (let i = 0; i < this.rows; i++) {\n          sum[i] /= this.columns;\n        }\n        return sum;\n      }\n      case 'column': {\n        for (let i = 0; i < this.columns; i++) {\n          sum[i] /= this.rows;\n        }\n        return sum;\n      }\n      case undefined:\n        return sum / this.size;\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  variance(by, options = {}) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { unbiased = true, mean = this.mean(by) } = options;\n    if (typeof unbiased !== 'boolean') {\n      throw new TypeError('unbiased must be a boolean');\n    }\n    switch (by) {\n      case 'row': {\n        if (!isAnyArray(mean)) {\n          throw new TypeError('mean must be an array');\n        }\n        return varianceByRow(this, unbiased, mean);\n      }\n      case 'column': {\n        if (!isAnyArray(mean)) {\n          throw new TypeError('mean must be an array');\n        }\n        return varianceByColumn(this, unbiased, mean);\n      }\n      case undefined: {\n        if (typeof mean !== 'number') {\n          throw new TypeError('mean must be a number');\n        }\n        return varianceAll(this, unbiased, mean);\n      }\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  standardDeviation(by, options) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    const variance = this.variance(by, options);\n    if (by === undefined) {\n      return Math.sqrt(variance);\n    } else {\n      for (let i = 0; i < variance.length; i++) {\n        variance[i] = Math.sqrt(variance[i]);\n      }\n      return variance;\n    }\n  }\n\n  center(by, options = {}) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { center = this.mean(by) } = options;\n    switch (by) {\n      case 'row': {\n        if (!isAnyArray(center)) {\n          throw new TypeError('center must be an array');\n        }\n        centerByRow(this, center);\n        return this;\n      }\n      case 'column': {\n        if (!isAnyArray(center)) {\n          throw new TypeError('center must be an array');\n        }\n        centerByColumn(this, center);\n        return this;\n      }\n      case undefined: {\n        if (typeof center !== 'number') {\n          throw new TypeError('center must be a number');\n        }\n        centerAll(this, center);\n        return this;\n      }\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  scale(by, options = {}) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    let scale = options.scale;\n    switch (by) {\n      case 'row': {\n        if (scale === undefined) {\n          scale = getScaleByRow(this);\n        } else if (!isAnyArray(scale)) {\n          throw new TypeError('scale must be an array');\n        }\n        scaleByRow(this, scale);\n        return this;\n      }\n      case 'column': {\n        if (scale === undefined) {\n          scale = getScaleByColumn(this);\n        } else if (!isAnyArray(scale)) {\n          throw new TypeError('scale must be an array');\n        }\n        scaleByColumn(this, scale);\n        return this;\n      }\n      case undefined: {\n        if (scale === undefined) {\n          scale = getScaleAll(this);\n        } else if (typeof scale !== 'number') {\n          throw new TypeError('scale must be a number');\n        }\n        scaleAll(this, scale);\n        return this;\n      }\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  toString(options) {\n    return inspectMatrixWithOptions(this, options);\n  }\n}\n\nAbstractMatrix.prototype.klass = 'Matrix';\nif (typeof Symbol !== 'undefined') {\n  AbstractMatrix.prototype[Symbol.for('nodejs.util.inspect.custom')] =\n    inspectMatrix;\n}\n\nfunction compareNumbers(a, b) {\n  return a - b;\n}\n\nfunction isArrayOfNumbers(array) {\n  return array.every((element) => {\n    return typeof element === 'number';\n  });\n}\n\n// Synonyms\nAbstractMatrix.random = AbstractMatrix.rand;\nAbstractMatrix.randomInt = AbstractMatrix.randInt;\nAbstractMatrix.diagonal = AbstractMatrix.diag;\nAbstractMatrix.prototype.diagonal = AbstractMatrix.prototype.diag;\nAbstractMatrix.identity = AbstractMatrix.eye;\nAbstractMatrix.prototype.negate = AbstractMatrix.prototype.neg;\nAbstractMatrix.prototype.tensorProduct =\n  AbstractMatrix.prototype.kroneckerProduct;\n\nexport default class Matrix extends AbstractMatrix {\n  constructor(nRows, nColumns) {\n    super();\n    if (Matrix.isMatrix(nRows)) {\n      // eslint-disable-next-line no-constructor-return\n      return nRows.clone();\n    } else if (Number.isInteger(nRows) && nRows >= 0) {\n      // Create an empty matrix\n      this.data = [];\n      if (Number.isInteger(nColumns) && nColumns >= 0) {\n        for (let i = 0; i < nRows; i++) {\n          this.data.push(new Float64Array(nColumns));\n        }\n      } else {\n        throw new TypeError('nColumns must be a positive integer');\n      }\n    } else if (isAnyArray(nRows)) {\n      // Copy the values from the 2D array\n      const arrayData = nRows;\n      nRows = arrayData.length;\n      nColumns = nRows ? arrayData[0].length : 0;\n      if (typeof nColumns !== 'number') {\n        throw new TypeError(\n          'Data must be a 2D array with at least one element',\n        );\n      }\n      this.data = [];\n      for (let i = 0; i < nRows; i++) {\n        if (arrayData[i].length !== nColumns) {\n          throw new RangeError('Inconsistent array dimensions');\n        }\n        if (!isArrayOfNumbers(arrayData[i])) {\n          throw new TypeError('Input data contains non-numeric values');\n        }\n        this.data.push(Float64Array.from(arrayData[i]));\n      }\n    } else {\n      throw new TypeError(\n        'First argument must be a positive number or an array',\n      );\n    }\n    this.rows = nRows;\n    this.columns = nColumns;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.data[rowIndex][columnIndex] = value;\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.data[rowIndex][columnIndex];\n  }\n\n  removeRow(index) {\n    checkRowIndex(this, index);\n    this.data.splice(index, 1);\n    this.rows -= 1;\n    return this;\n  }\n\n  addRow(index, array) {\n    if (array === undefined) {\n      array = index;\n      index = this.rows;\n    }\n    checkRowIndex(this, index, true);\n    array = Float64Array.from(checkRowVector(this, array));\n    this.data.splice(index, 0, array);\n    this.rows += 1;\n    return this;\n  }\n\n  removeColumn(index) {\n    checkColumnIndex(this, index);\n    for (let i = 0; i < this.rows; i++) {\n      const newRow = new Float64Array(this.columns - 1);\n      for (let j = 0; j < index; j++) {\n        newRow[j] = this.data[i][j];\n      }\n      for (let j = index + 1; j < this.columns; j++) {\n        newRow[j - 1] = this.data[i][j];\n      }\n      this.data[i] = newRow;\n    }\n    this.columns -= 1;\n    return this;\n  }\n\n  addColumn(index, array) {\n    if (typeof array === 'undefined') {\n      array = index;\n      index = this.columns;\n    }\n    checkColumnIndex(this, index, true);\n    array = checkColumnVector(this, array);\n    for (let i = 0; i < this.rows; i++) {\n      const newRow = new Float64Array(this.columns + 1);\n      let j = 0;\n      for (; j < index; j++) {\n        newRow[j] = this.data[i][j];\n      }\n      newRow[j++] = array[i];\n      for (; j < this.columns + 1; j++) {\n        newRow[j] = this.data[i][j - 1];\n      }\n      this.data[i] = newRow;\n    }\n    this.columns += 1;\n    return this;\n  }\n}\n\ninstallMathOperations(AbstractMatrix, Matrix);\n","import { AbstractMatrix } from '../matrix';\n\nexport default class WrapperMatrix2D extends AbstractMatrix {\n  constructor(data) {\n    super();\n    this.data = data;\n    this.rows = data.length;\n    this.columns = data[0].length;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.data[rowIndex][columnIndex] = value;\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.data[rowIndex][columnIndex];\n  }\n}\n","import Matrix from '../matrix';\nimport WrapperMatrix2D from '../wrap/WrapperMatrix2D';\n\nexport default class LuDecomposition {\n  constructor(matrix) {\n    matrix = WrapperMatrix2D.checkMatrix(matrix);\n\n    let lu = matrix.clone();\n    let rows = lu.rows;\n    let columns = lu.columns;\n    let pivotVector = new Float64Array(rows);\n    let pivotSign = 1;\n    let i, j, k, p, s, t, v;\n    let LUcolj, kmax;\n\n    for (i = 0; i < rows; i++) {\n      pivotVector[i] = i;\n    }\n\n    LUcolj = new Float64Array(rows);\n\n    for (j = 0; j < columns; j++) {\n      for (i = 0; i < rows; i++) {\n        LUcolj[i] = lu.get(i, j);\n      }\n\n      for (i = 0; i < rows; i++) {\n        kmax = Math.min(i, j);\n        s = 0;\n        for (k = 0; k < kmax; k++) {\n          s += lu.get(i, k) * LUcolj[k];\n        }\n        LUcolj[i] -= s;\n        lu.set(i, j, LUcolj[i]);\n      }\n\n      p = j;\n      for (i = j + 1; i < rows; i++) {\n        if (Math.abs(LUcolj[i]) > Math.abs(LUcolj[p])) {\n          p = i;\n        }\n      }\n\n      if (p !== j) {\n        for (k = 0; k < columns; k++) {\n          t = lu.get(p, k);\n          lu.set(p, k, lu.get(j, k));\n          lu.set(j, k, t);\n        }\n\n        v = pivotVector[p];\n        pivotVector[p] = pivotVector[j];\n        pivotVector[j] = v;\n\n        pivotSign = -pivotSign;\n      }\n\n      if (j < rows && lu.get(j, j) !== 0) {\n        for (i = j + 1; i < rows; i++) {\n          lu.set(i, j, lu.get(i, j) / lu.get(j, j));\n        }\n      }\n    }\n\n    this.LU = lu;\n    this.pivotVector = pivotVector;\n    this.pivotSign = pivotSign;\n  }\n\n  isSingular() {\n    let data = this.LU;\n    let col = data.columns;\n    for (let j = 0; j < col; j++) {\n      if (data.get(j, j) === 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  solve(value) {\n    value = Matrix.checkMatrix(value);\n\n    let lu = this.LU;\n    let rows = lu.rows;\n\n    if (rows !== value.rows) {\n      throw new Error('Invalid matrix dimensions');\n    }\n    if (this.isSingular()) {\n      throw new Error('LU matrix is singular');\n    }\n\n    let count = value.columns;\n    let X = value.subMatrixRow(this.pivotVector, 0, count - 1);\n    let columns = lu.columns;\n    let i, j, k;\n\n    for (k = 0; k < columns; k++) {\n      for (i = k + 1; i < columns; i++) {\n        for (j = 0; j < count; j++) {\n          X.set(i, j, X.get(i, j) - X.get(k, j) * lu.get(i, k));\n        }\n      }\n    }\n    for (k = columns - 1; k >= 0; k--) {\n      for (j = 0; j < count; j++) {\n        X.set(k, j, X.get(k, j) / lu.get(k, k));\n      }\n      for (i = 0; i < k; i++) {\n        for (j = 0; j < count; j++) {\n          X.set(i, j, X.get(i, j) - X.get(k, j) * lu.get(i, k));\n        }\n      }\n    }\n    return X;\n  }\n\n  get determinant() {\n    let data = this.LU;\n    if (!data.isSquare()) {\n      throw new Error('Matrix must be square');\n    }\n    let determinant = this.pivotSign;\n    let col = data.columns;\n    for (let j = 0; j < col; j++) {\n      determinant *= data.get(j, j);\n    }\n    return determinant;\n  }\n\n  get lowerTriangularMatrix() {\n    let data = this.LU;\n    let rows = data.rows;\n    let columns = data.columns;\n    let X = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        if (i > j) {\n          X.set(i, j, data.get(i, j));\n        } else if (i === j) {\n          X.set(i, j, 1);\n        } else {\n          X.set(i, j, 0);\n        }\n      }\n    }\n    return X;\n  }\n\n  get upperTriangularMatrix() {\n    let data = this.LU;\n    let rows = data.rows;\n    let columns = data.columns;\n    let X = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        if (i <= j) {\n          X.set(i, j, data.get(i, j));\n        } else {\n          X.set(i, j, 0);\n        }\n      }\n    }\n    return X;\n  }\n\n  get pivotPermutationVector() {\n    return Array.from(this.pivotVector);\n  }\n}\n","export function hypotenuse(a, b) {\n  let r = 0;\n  if (Math.abs(a) > Math.abs(b)) {\n    r = b / a;\n    return Math.abs(a) * Math.sqrt(1 + r * r);\n  }\n  if (b !== 0) {\n    r = a / b;\n    return Math.abs(b) * Math.sqrt(1 + r * r);\n  }\n  return 0;\n}\n","import Matrix from '../matrix';\nimport WrapperMatrix2D from '../wrap/WrapperMatrix2D';\n\nimport { hypotenuse } from './util';\n\nexport default class QrDecomposition {\n  constructor(value) {\n    value = WrapperMatrix2D.checkMatrix(value);\n\n    let qr = value.clone();\n    let m = value.rows;\n    let n = value.columns;\n    let rdiag = new Float64Array(n);\n    let i, j, k, s;\n\n    for (k = 0; k < n; k++) {\n      let nrm = 0;\n      for (i = k; i < m; i++) {\n        nrm = hypotenuse(nrm, qr.get(i, k));\n      }\n      if (nrm !== 0) {\n        if (qr.get(k, k) < 0) {\n          nrm = -nrm;\n        }\n        for (i = k; i < m; i++) {\n          qr.set(i, k, qr.get(i, k) / nrm);\n        }\n        qr.set(k, k, qr.get(k, k) + 1);\n        for (j = k + 1; j < n; j++) {\n          s = 0;\n          for (i = k; i < m; i++) {\n            s += qr.get(i, k) * qr.get(i, j);\n          }\n          s = -s / qr.get(k, k);\n          for (i = k; i < m; i++) {\n            qr.set(i, j, qr.get(i, j) + s * qr.get(i, k));\n          }\n        }\n      }\n      rdiag[k] = -nrm;\n    }\n\n    this.QR = qr;\n    this.Rdiag = rdiag;\n  }\n\n  solve(value) {\n    value = Matrix.checkMatrix(value);\n\n    let qr = this.QR;\n    let m = qr.rows;\n\n    if (value.rows !== m) {\n      throw new Error('Matrix row dimensions must agree');\n    }\n    if (!this.isFullRank()) {\n      throw new Error('Matrix is rank deficient');\n    }\n\n    let count = value.columns;\n    let X = value.clone();\n    let n = qr.columns;\n    let i, j, k, s;\n\n    for (k = 0; k < n; k++) {\n      for (j = 0; j < count; j++) {\n        s = 0;\n        for (i = k; i < m; i++) {\n          s += qr.get(i, k) * X.get(i, j);\n        }\n        s = -s / qr.get(k, k);\n        for (i = k; i < m; i++) {\n          X.set(i, j, X.get(i, j) + s * qr.get(i, k));\n        }\n      }\n    }\n    for (k = n - 1; k >= 0; k--) {\n      for (j = 0; j < count; j++) {\n        X.set(k, j, X.get(k, j) / this.Rdiag[k]);\n      }\n      for (i = 0; i < k; i++) {\n        for (j = 0; j < count; j++) {\n          X.set(i, j, X.get(i, j) - X.get(k, j) * qr.get(i, k));\n        }\n      }\n    }\n\n    return X.subMatrix(0, n - 1, 0, count - 1);\n  }\n\n  isFullRank() {\n    let columns = this.QR.columns;\n    for (let i = 0; i < columns; i++) {\n      if (this.Rdiag[i] === 0) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  get upperTriangularMatrix() {\n    let qr = this.QR;\n    let n = qr.columns;\n    let X = new Matrix(n, n);\n    let i, j;\n    for (i = 0; i < n; i++) {\n      for (j = 0; j < n; j++) {\n        if (i < j) {\n          X.set(i, j, qr.get(i, j));\n        } else if (i === j) {\n          X.set(i, j, this.Rdiag[i]);\n        } else {\n          X.set(i, j, 0);\n        }\n      }\n    }\n    return X;\n  }\n\n  get orthogonalMatrix() {\n    let qr = this.QR;\n    let rows = qr.rows;\n    let columns = qr.columns;\n    let X = new Matrix(rows, columns);\n    let i, j, k, s;\n\n    for (k = columns - 1; k >= 0; k--) {\n      for (i = 0; i < rows; i++) {\n        X.set(i, k, 0);\n      }\n      X.set(k, k, 1);\n      for (j = k; j < columns; j++) {\n        if (qr.get(k, k) !== 0) {\n          s = 0;\n          for (i = k; i < rows; i++) {\n            s += qr.get(i, k) * X.get(i, j);\n          }\n\n          s = -s / qr.get(k, k);\n\n          for (i = k; i < rows; i++) {\n            X.set(i, j, X.get(i, j) + s * qr.get(i, k));\n          }\n        }\n      }\n    }\n    return X;\n  }\n}\n","import Matrix from '../matrix';\nimport WrapperMatrix2D from '../wrap/WrapperMatrix2D';\n\nimport { hypotenuse } from './util';\n\nexport default class SingularValueDecomposition {\n  constructor(value, options = {}) {\n    value = WrapperMatrix2D.checkMatrix(value);\n\n    if (value.isEmpty()) {\n      throw new Error('Matrix must be non-empty');\n    }\n\n    let m = value.rows;\n    let n = value.columns;\n\n    const {\n      computeLeftSingularVectors = true,\n      computeRightSingularVectors = true,\n      autoTranspose = false,\n    } = options;\n\n    let wantu = Boolean(computeLeftSingularVectors);\n    let wantv = Boolean(computeRightSingularVectors);\n\n    let swapped = false;\n    let a;\n    if (m < n) {\n      if (!autoTranspose) {\n        a = value.clone();\n        // eslint-disable-next-line no-console\n        console.warn(\n          'Computing SVD on a matrix with more columns than rows. Consider enabling autoTranspose',\n        );\n      } else {\n        a = value.transpose();\n        m = a.rows;\n        n = a.columns;\n        swapped = true;\n        let aux = wantu;\n        wantu = wantv;\n        wantv = aux;\n      }\n    } else {\n      a = value.clone();\n    }\n\n    let nu = Math.min(m, n);\n    let ni = Math.min(m + 1, n);\n    let s = new Float64Array(ni);\n    let U = new Matrix(m, nu);\n    let V = new Matrix(n, n);\n\n    let e = new Float64Array(n);\n    let work = new Float64Array(m);\n\n    let si = new Float64Array(ni);\n    for (let i = 0; i < ni; i++) si[i] = i;\n\n    let nct = Math.min(m - 1, n);\n    let nrt = Math.max(0, Math.min(n - 2, m));\n    let mrc = Math.max(nct, nrt);\n\n    for (let k = 0; k < mrc; k++) {\n      if (k < nct) {\n        s[k] = 0;\n        for (let i = k; i < m; i++) {\n          s[k] = hypotenuse(s[k], a.get(i, k));\n        }\n        if (s[k] !== 0) {\n          if (a.get(k, k) < 0) {\n            s[k] = -s[k];\n          }\n          for (let i = k; i < m; i++) {\n            a.set(i, k, a.get(i, k) / s[k]);\n          }\n          a.set(k, k, a.get(k, k) + 1);\n        }\n        s[k] = -s[k];\n      }\n\n      for (let j = k + 1; j < n; j++) {\n        if (k < nct && s[k] !== 0) {\n          let t = 0;\n          for (let i = k; i < m; i++) {\n            t += a.get(i, k) * a.get(i, j);\n          }\n          t = -t / a.get(k, k);\n          for (let i = k; i < m; i++) {\n            a.set(i, j, a.get(i, j) + t * a.get(i, k));\n          }\n        }\n        e[j] = a.get(k, j);\n      }\n\n      if (wantu && k < nct) {\n        for (let i = k; i < m; i++) {\n          U.set(i, k, a.get(i, k));\n        }\n      }\n\n      if (k < nrt) {\n        e[k] = 0;\n        for (let i = k + 1; i < n; i++) {\n          e[k] = hypotenuse(e[k], e[i]);\n        }\n        if (e[k] !== 0) {\n          if (e[k + 1] < 0) {\n            e[k] = 0 - e[k];\n          }\n          for (let i = k + 1; i < n; i++) {\n            e[i] /= e[k];\n          }\n          e[k + 1] += 1;\n        }\n        e[k] = -e[k];\n        if (k + 1 < m && e[k] !== 0) {\n          for (let i = k + 1; i < m; i++) {\n            work[i] = 0;\n          }\n          for (let i = k + 1; i < m; i++) {\n            for (let j = k + 1; j < n; j++) {\n              work[i] += e[j] * a.get(i, j);\n            }\n          }\n          for (let j = k + 1; j < n; j++) {\n            let t = -e[j] / e[k + 1];\n            for (let i = k + 1; i < m; i++) {\n              a.set(i, j, a.get(i, j) + t * work[i]);\n            }\n          }\n        }\n        if (wantv) {\n          for (let i = k + 1; i < n; i++) {\n            V.set(i, k, e[i]);\n          }\n        }\n      }\n    }\n\n    let p = Math.min(n, m + 1);\n    if (nct < n) {\n      s[nct] = a.get(nct, nct);\n    }\n    if (m < p) {\n      s[p - 1] = 0;\n    }\n    if (nrt + 1 < p) {\n      e[nrt] = a.get(nrt, p - 1);\n    }\n    e[p - 1] = 0;\n\n    if (wantu) {\n      for (let j = nct; j < nu; j++) {\n        for (let i = 0; i < m; i++) {\n          U.set(i, j, 0);\n        }\n        U.set(j, j, 1);\n      }\n      for (let k = nct - 1; k >= 0; k--) {\n        if (s[k] !== 0) {\n          for (let j = k + 1; j < nu; j++) {\n            let t = 0;\n            for (let i = k; i < m; i++) {\n              t += U.get(i, k) * U.get(i, j);\n            }\n            t = -t / U.get(k, k);\n            for (let i = k; i < m; i++) {\n              U.set(i, j, U.get(i, j) + t * U.get(i, k));\n            }\n          }\n          for (let i = k; i < m; i++) {\n            U.set(i, k, -U.get(i, k));\n          }\n          U.set(k, k, 1 + U.get(k, k));\n          for (let i = 0; i < k - 1; i++) {\n            U.set(i, k, 0);\n          }\n        } else {\n          for (let i = 0; i < m; i++) {\n            U.set(i, k, 0);\n          }\n          U.set(k, k, 1);\n        }\n      }\n    }\n\n    if (wantv) {\n      for (let k = n - 1; k >= 0; k--) {\n        if (k < nrt && e[k] !== 0) {\n          for (let j = k + 1; j < n; j++) {\n            let t = 0;\n            for (let i = k + 1; i < n; i++) {\n              t += V.get(i, k) * V.get(i, j);\n            }\n            t = -t / V.get(k + 1, k);\n            for (let i = k + 1; i < n; i++) {\n              V.set(i, j, V.get(i, j) + t * V.get(i, k));\n            }\n          }\n        }\n        for (let i = 0; i < n; i++) {\n          V.set(i, k, 0);\n        }\n        V.set(k, k, 1);\n      }\n    }\n\n    let pp = p - 1;\n    let iter = 0;\n    let eps = Number.EPSILON;\n    while (p > 0) {\n      let k, kase;\n      for (k = p - 2; k >= -1; k--) {\n        if (k === -1) {\n          break;\n        }\n        const alpha =\n          Number.MIN_VALUE + eps * Math.abs(s[k] + Math.abs(s[k + 1]));\n        if (Math.abs(e[k]) <= alpha || Number.isNaN(e[k])) {\n          e[k] = 0;\n          break;\n        }\n      }\n      if (k === p - 2) {\n        kase = 4;\n      } else {\n        let ks;\n        for (ks = p - 1; ks >= k; ks--) {\n          if (ks === k) {\n            break;\n          }\n          let t =\n            (ks !== p ? Math.abs(e[ks]) : 0) +\n            (ks !== k + 1 ? Math.abs(e[ks - 1]) : 0);\n          if (Math.abs(s[ks]) <= eps * t) {\n            s[ks] = 0;\n            break;\n          }\n        }\n        if (ks === k) {\n          kase = 3;\n        } else if (ks === p - 1) {\n          kase = 1;\n        } else {\n          kase = 2;\n          k = ks;\n        }\n      }\n\n      k++;\n\n      switch (kase) {\n        case 1: {\n          let f = e[p - 2];\n          e[p - 2] = 0;\n          for (let j = p - 2; j >= k; j--) {\n            let t = hypotenuse(s[j], f);\n            let cs = s[j] / t;\n            let sn = f / t;\n            s[j] = t;\n            if (j !== k) {\n              f = -sn * e[j - 1];\n              e[j - 1] = cs * e[j - 1];\n            }\n            if (wantv) {\n              for (let i = 0; i < n; i++) {\n                t = cs * V.get(i, j) + sn * V.get(i, p - 1);\n                V.set(i, p - 1, -sn * V.get(i, j) + cs * V.get(i, p - 1));\n                V.set(i, j, t);\n              }\n            }\n          }\n          break;\n        }\n        case 2: {\n          let f = e[k - 1];\n          e[k - 1] = 0;\n          for (let j = k; j < p; j++) {\n            let t = hypotenuse(s[j], f);\n            let cs = s[j] / t;\n            let sn = f / t;\n            s[j] = t;\n            f = -sn * e[j];\n            e[j] = cs * e[j];\n            if (wantu) {\n              for (let i = 0; i < m; i++) {\n                t = cs * U.get(i, j) + sn * U.get(i, k - 1);\n                U.set(i, k - 1, -sn * U.get(i, j) + cs * U.get(i, k - 1));\n                U.set(i, j, t);\n              }\n            }\n          }\n          break;\n        }\n        case 3: {\n          const scale = Math.max(\n            Math.abs(s[p - 1]),\n            Math.abs(s[p - 2]),\n            Math.abs(e[p - 2]),\n            Math.abs(s[k]),\n            Math.abs(e[k]),\n          );\n          const sp = s[p - 1] / scale;\n          const spm1 = s[p - 2] / scale;\n          const epm1 = e[p - 2] / scale;\n          const sk = s[k] / scale;\n          const ek = e[k] / scale;\n          const b = ((spm1 + sp) * (spm1 - sp) + epm1 * epm1) / 2;\n          const c = sp * epm1 * (sp * epm1);\n          let shift = 0;\n          if (b !== 0 || c !== 0) {\n            if (b < 0) {\n              shift = 0 - Math.sqrt(b * b + c);\n            } else {\n              shift = Math.sqrt(b * b + c);\n            }\n            shift = c / (b + shift);\n          }\n          let f = (sk + sp) * (sk - sp) + shift;\n          let g = sk * ek;\n          for (let j = k; j < p - 1; j++) {\n            let t = hypotenuse(f, g);\n            if (t === 0) t = Number.MIN_VALUE;\n            let cs = f / t;\n            let sn = g / t;\n            if (j !== k) {\n              e[j - 1] = t;\n            }\n            f = cs * s[j] + sn * e[j];\n            e[j] = cs * e[j] - sn * s[j];\n            g = sn * s[j + 1];\n            s[j + 1] = cs * s[j + 1];\n            if (wantv) {\n              for (let i = 0; i < n; i++) {\n                t = cs * V.get(i, j) + sn * V.get(i, j + 1);\n                V.set(i, j + 1, -sn * V.get(i, j) + cs * V.get(i, j + 1));\n                V.set(i, j, t);\n              }\n            }\n            t = hypotenuse(f, g);\n            if (t === 0) t = Number.MIN_VALUE;\n            cs = f / t;\n            sn = g / t;\n            s[j] = t;\n            f = cs * e[j] + sn * s[j + 1];\n            s[j + 1] = -sn * e[j] + cs * s[j + 1];\n            g = sn * e[j + 1];\n            e[j + 1] = cs * e[j + 1];\n            if (wantu && j < m - 1) {\n              for (let i = 0; i < m; i++) {\n                t = cs * U.get(i, j) + sn * U.get(i, j + 1);\n                U.set(i, j + 1, -sn * U.get(i, j) + cs * U.get(i, j + 1));\n                U.set(i, j, t);\n              }\n            }\n          }\n          e[p - 2] = f;\n          iter = iter + 1;\n          break;\n        }\n        case 4: {\n          if (s[k] <= 0) {\n            s[k] = s[k] < 0 ? -s[k] : 0;\n            if (wantv) {\n              for (let i = 0; i <= pp; i++) {\n                V.set(i, k, -V.get(i, k));\n              }\n            }\n          }\n          while (k < pp) {\n            if (s[k] >= s[k + 1]) {\n              break;\n            }\n            let t = s[k];\n            s[k] = s[k + 1];\n            s[k + 1] = t;\n            if (wantv && k < n - 1) {\n              for (let i = 0; i < n; i++) {\n                t = V.get(i, k + 1);\n                V.set(i, k + 1, V.get(i, k));\n                V.set(i, k, t);\n              }\n            }\n            if (wantu && k < m - 1) {\n              for (let i = 0; i < m; i++) {\n                t = U.get(i, k + 1);\n                U.set(i, k + 1, U.get(i, k));\n                U.set(i, k, t);\n              }\n            }\n            k++;\n          }\n          iter = 0;\n          p--;\n          break;\n        }\n        // no default\n      }\n    }\n\n    if (swapped) {\n      let tmp = V;\n      V = U;\n      U = tmp;\n    }\n\n    this.m = m;\n    this.n = n;\n    this.s = s;\n    this.U = U;\n    this.V = V;\n  }\n\n  solve(value) {\n    let Y = value;\n    let e = this.threshold;\n    let scols = this.s.length;\n    let Ls = Matrix.zeros(scols, scols);\n\n    for (let i = 0; i < scols; i++) {\n      if (Math.abs(this.s[i]) <= e) {\n        Ls.set(i, i, 0);\n      } else {\n        Ls.set(i, i, 1 / this.s[i]);\n      }\n    }\n\n    let U = this.U;\n    let V = this.rightSingularVectors;\n\n    let VL = V.mmul(Ls);\n    let vrows = V.rows;\n    let urows = U.rows;\n    let VLU = Matrix.zeros(vrows, urows);\n\n    for (let i = 0; i < vrows; i++) {\n      for (let j = 0; j < urows; j++) {\n        let sum = 0;\n        for (let k = 0; k < scols; k++) {\n          sum += VL.get(i, k) * U.get(j, k);\n        }\n        VLU.set(i, j, sum);\n      }\n    }\n\n    return VLU.mmul(Y);\n  }\n\n  solveForDiagonal(value) {\n    return this.solve(Matrix.diag(value));\n  }\n\n  inverse() {\n    let V = this.V;\n    let e = this.threshold;\n    let vrows = V.rows;\n    let vcols = V.columns;\n    let X = new Matrix(vrows, this.s.length);\n\n    for (let i = 0; i < vrows; i++) {\n      for (let j = 0; j < vcols; j++) {\n        if (Math.abs(this.s[j]) > e) {\n          X.set(i, j, V.get(i, j) / this.s[j]);\n        }\n      }\n    }\n\n    let U = this.U;\n\n    let urows = U.rows;\n    let ucols = U.columns;\n    let Y = new Matrix(vrows, urows);\n\n    for (let i = 0; i < vrows; i++) {\n      for (let j = 0; j < urows; j++) {\n        let sum = 0;\n        for (let k = 0; k < ucols; k++) {\n          sum += X.get(i, k) * U.get(j, k);\n        }\n        Y.set(i, j, sum);\n      }\n    }\n\n    return Y;\n  }\n\n  get condition() {\n    return this.s[0] / this.s[Math.min(this.m, this.n) - 1];\n  }\n\n  get norm2() {\n    return this.s[0];\n  }\n\n  get rank() {\n    let tol = Math.max(this.m, this.n) * this.s[0] * Number.EPSILON;\n    let r = 0;\n    let s = this.s;\n    for (let i = 0, ii = s.length; i < ii; i++) {\n      if (s[i] > tol) {\n        r++;\n      }\n    }\n    return r;\n  }\n\n  get diagonal() {\n    return Array.from(this.s);\n  }\n\n  get threshold() {\n    return (Number.EPSILON / 2) * Math.max(this.m, this.n) * this.s[0];\n  }\n\n  get leftSingularVectors() {\n    return this.U;\n  }\n\n  get rightSingularVectors() {\n    return this.V;\n  }\n\n  get diagonalMatrix() {\n    return Matrix.diag(this.s);\n  }\n}\n","import LuDecomposition from './dc/lu';\nimport QrDecomposition from './dc/qr';\nimport SingularValueDecomposition from './dc/svd';\nimport Matrix from './matrix';\nimport WrapperMatrix2D from './wrap/WrapperMatrix2D';\n\nexport function inverse(matrix, useSVD = false) {\n  matrix = WrapperMatrix2D.checkMatrix(matrix);\n  if (useSVD) {\n    return new SingularValueDecomposition(matrix).inverse();\n  } else {\n    return solve(matrix, Matrix.eye(matrix.rows));\n  }\n}\n\nexport function solve(leftHandSide, rightHandSide, useSVD = false) {\n  leftHandSide = WrapperMatrix2D.checkMatrix(leftHandSide);\n  rightHandSide = WrapperMatrix2D.checkMatrix(rightHandSide);\n  if (useSVD) {\n    return new SingularValueDecomposition(leftHandSide).solve(rightHandSide);\n  } else {\n    return leftHandSide.isSquare()\n      ? new LuDecomposition(leftHandSide).solve(rightHandSide)\n      : new QrDecomposition(leftHandSide).solve(rightHandSide);\n  }\n}\n","import { inverse, Matrix } from 'ml-matrix';\n\n/**\n * Difference of the matrix function over the parameters\n * @ignore\n * @param {{x:Array<number>, y:Array<number>}} data - Array of points to fit in the format [x1, x2, ... ], [y1, y2, ... ]\n * @param {Array<number>} evaluatedData - Array of previous evaluated function values\n * @param {Array<number>} params - Array of previous parameter values\n * @param {number} gradientDifference - Adjustment for decrease the damping parameter\n * @param {function} paramFunction - The parameters and returns a function with the independent variable as a parameter\n * @return {Matrix}\n */\nfunction gradientFunction(\n  data,\n  evaluatedData,\n  params,\n  gradientDifference,\n  paramFunction,\n) {\n  const n = params.length;\n  const m = data.x.length;\n\n  let ans = new Array(n);\n\n  for (let param = 0; param < n; param++) {\n    ans[param] = new Array(m);\n    let auxParams = params.slice();\n    auxParams[param] += gradientDifference;\n    let funcParam = paramFunction(auxParams);\n\n    for (let point = 0; point < m; point++) {\n      ans[param][point] = evaluatedData[point] - funcParam(data.x[point]);\n    }\n  }\n  return new Matrix(ans);\n}\n\n/**\n * Matrix function over the samples\n * @ignore\n * @param {{x:Array<number>, y:Array<number>}} data - Array of points to fit in the format [x1, x2, ... ], [y1, y2, ... ]\n * @param {Array<number>} evaluatedData - Array of previous evaluated function values\n * @return {Matrix}\n */\nfunction matrixFunction(data, evaluatedData) {\n  const m = data.x.length;\n\n  let ans = new Array(m);\n\n  for (let point = 0; point < m; point++) {\n    ans[point] = [data.y[point] - evaluatedData[point]];\n  }\n\n  return new Matrix(ans);\n}\n\n/**\n * Iteration for Levenberg-Marquardt\n * @ignore\n * @param {{x:Array<number>, y:Array<number>}} data - Array of points to fit in the format [x1, x2, ... ], [y1, y2, ... ]\n * @param {Array<number>} params - Array of previous parameter values\n * @param {number} damping - Levenberg-Marquardt parameter\n * @param {number} gradientDifference - Adjustment for decrease the damping parameter\n * @param {function} parameterizedFunction - The parameters and returns a function with the independent variable as a parameter\n * @return {Array<number>}\n */\nexport default function step(\n  data,\n  params,\n  damping,\n  gradientDifference,\n  parameterizedFunction,\n) {\n  let value = damping * gradientDifference * gradientDifference;\n  let identity = Matrix.eye(params.length, params.length, value);\n\n  const func = parameterizedFunction(params);\n\n  let evaluatedData = new Float64Array(data.x.length);\n  for (let i = 0; i < data.x.length; i++) {\n    evaluatedData[i] = func(data.x[i]);\n  }\n\n  let gradientFunc = gradientFunction(\n    data,\n    evaluatedData,\n    params,\n    gradientDifference,\n    parameterizedFunction,\n  );\n  let matrixFunc = matrixFunction(data, evaluatedData);\n  let inverseMatrix = inverse(\n    identity.add(gradientFunc.mmul(gradientFunc.transpose())),\n  );\n\n  params = new Matrix([params]);\n  params = params.sub(\n    inverseMatrix\n      .mmul(gradientFunc)\n      .mmul(matrixFunc)\n      .mul(gradientDifference)\n      .transpose(),\n  );\n\n  return params.to1DArray();\n}\n","import isArray from 'is-any-array';\n\nimport errorCalculation from './errorCalculation';\nimport step from './step';\n\n/**\n * Curve fitting algorithm\n * @param {{x:Array<number>, y:Array<number>}} data - Array of points to fit in the format [x1, x2, ... ], [y1, y2, ... ]\n * @param {function} parameterizedFunction - The parameters and returns a function with the independent variable as a parameter\n * @param {object} [options] - Options object\n * @param {number} [options.damping] - Levenberg-Marquardt parameter\n * @param {number} [options.gradientDifference = 10e-2] - Adjustment for decrease the damping parameter\n * @param {Array<number>} [options.minValues] - Minimum allowed values for parameters\n * @param {Array<number>} [options.maxValues] - Maximum allowed values for parameters\n * @param {Array<number>} [options.initialValues] - Array of initial parameter values\n * @param {number} [options.maxIterations = 100] - Maximum of allowed iterations\n * @param {number} [options.errorTolerance = 10e-3] - Minimum uncertainty allowed for each point\n * @return {{parameterValues: Array<number>, parameterError: number, iterations: number}}\n */\nexport default function levenbergMarquardt(\n  data,\n  parameterizedFunction,\n  options = {},\n) {\n  let {\n    maxIterations = 100,\n    gradientDifference = 10e-2,\n    damping = 0,\n    errorTolerance = 10e-3,\n    minValues,\n    maxValues,\n    initialValues,\n  } = options;\n\n  if (damping <= 0) {\n    throw new Error('The damping option must be a positive number');\n  } else if (!data.x || !data.y) {\n    throw new Error('The data parameter must have x and y elements');\n  } else if (\n    !isArray(data.x) ||\n    data.x.length < 2 ||\n    !isArray(data.y) ||\n    data.y.length < 2\n  ) {\n    throw new Error(\n      'The data parameter elements must be an array with more than 2 points',\n    );\n  } else if (data.x.length !== data.y.length) {\n    throw new Error('The data parameter elements must have the same size');\n  }\n\n  let parameters =\n    initialValues || new Array(parameterizedFunction.length).fill(1);\n  let parLen = parameters.length;\n  maxValues = maxValues || new Array(parLen).fill(Number.MAX_SAFE_INTEGER);\n  minValues = minValues || new Array(parLen).fill(Number.MIN_SAFE_INTEGER);\n\n  if (maxValues.length !== minValues.length) {\n    throw new Error('minValues and maxValues must be the same size');\n  }\n\n  if (!isArray(parameters)) {\n    throw new Error('initialValues must be an array');\n  }\n\n  let error = errorCalculation(data, parameters, parameterizedFunction);\n\n  let converged = error <= errorTolerance;\n\n  let iteration;\n  for (iteration = 0; iteration < maxIterations && !converged; iteration++) {\n    parameters = step(\n      data,\n      parameters,\n      damping,\n      gradientDifference,\n      parameterizedFunction,\n    );\n\n    for (let k = 0; k < parLen; k++) {\n      parameters[k] = Math.min(\n        Math.max(minValues[k], parameters[k]),\n        maxValues[k],\n      );\n    }\n\n    error = errorCalculation(data, parameters, parameterizedFunction);\n    if (isNaN(error)) break;\n    converged = error <= errorTolerance;\n  }\n\n  return {\n    parameterValues: parameters,\n    parameterError: error,\n    iterations: iteration,\n  };\n}\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar heap = __importStar(require(\"./heap\"));\nvar matrix = __importStar(require(\"./matrix\"));\nvar nnDescent = __importStar(require(\"./nn_descent\"));\nvar tree = __importStar(require(\"./tree\"));\nvar utils = __importStar(require(\"./utils\"));\nvar ml_levenberg_marquardt_1 = __importDefault(require(\"ml-levenberg-marquardt\"));\nvar SMOOTH_K_TOLERANCE = 1e-5;\nvar MIN_K_DIST_SCALE = 1e-3;\nvar UMAP = (function () {\n    function UMAP(params) {\n        if (params === void 0) { params = {}; }\n        var _this = this;\n        this.learningRate = 1.0;\n        this.localConnectivity = 1.0;\n        this.minDist = 0.1;\n        this.nComponents = 2;\n        this.nEpochs = 0;\n        this.nNeighbors = 15;\n        this.negativeSampleRate = 5;\n        this.random = Math.random;\n        this.repulsionStrength = 1.0;\n        this.setOpMixRatio = 1.0;\n        this.spread = 1.0;\n        this.transformQueueSize = 4.0;\n        this.targetMetric = \"categorical\";\n        this.targetWeight = 0.5;\n        this.targetNNeighbors = this.nNeighbors;\n        this.distanceFn = euclidean;\n        this.isInitialized = false;\n        this.rpForest = [];\n        this.embedding = [];\n        this.optimizationState = new OptimizationState();\n        var setParam = function (key) {\n            if (params[key] !== undefined)\n                _this[key] = params[key];\n        };\n        setParam('distanceFn');\n        setParam('learningRate');\n        setParam('localConnectivity');\n        setParam('minDist');\n        setParam('nComponents');\n        setParam('nEpochs');\n        setParam('nNeighbors');\n        setParam('negativeSampleRate');\n        setParam('random');\n        setParam('repulsionStrength');\n        setParam('setOpMixRatio');\n        setParam('spread');\n        setParam('transformQueueSize');\n    }\n    UMAP.prototype.fit = function (X) {\n        this.initializeFit(X);\n        this.optimizeLayout();\n        return this.embedding;\n    };\n    UMAP.prototype.fitAsync = function (X, callback) {\n        if (callback === void 0) { callback = function () { return true; }; }\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this.initializeFit(X);\n                        return [4, this.optimizeLayoutAsync(callback)];\n                    case 1:\n                        _a.sent();\n                        return [2, this.embedding];\n                }\n            });\n        });\n    };\n    UMAP.prototype.setSupervisedProjection = function (Y, params) {\n        if (params === void 0) { params = {}; }\n        this.Y = Y;\n        this.targetMetric = params.targetMetric || this.targetMetric;\n        this.targetWeight = params.targetWeight || this.targetWeight;\n        this.targetNNeighbors = params.targetNNeighbors || this.targetNNeighbors;\n    };\n    UMAP.prototype.setPrecomputedKNN = function (knnIndices, knnDistances) {\n        this.knnIndices = knnIndices;\n        this.knnDistances = knnDistances;\n    };\n    UMAP.prototype.initializeFit = function (X) {\n        if (X.length <= this.nNeighbors) {\n            throw new Error(\"Not enough data points (\" + X.length + \") to create nNeighbors: \" + this.nNeighbors + \".  Add more data points or adjust the configuration.\");\n        }\n        if (this.X === X && this.isInitialized) {\n            return this.getNEpochs();\n        }\n        this.X = X;\n        if (!this.knnIndices && !this.knnDistances) {\n            var knnResults = this.nearestNeighbors(X);\n            this.knnIndices = knnResults.knnIndices;\n            this.knnDistances = knnResults.knnDistances;\n        }\n        this.graph = this.fuzzySimplicialSet(X, this.nNeighbors, this.setOpMixRatio);\n        this.makeSearchFns();\n        this.searchGraph = this.makeSearchGraph(X);\n        this.processGraphForSupervisedProjection();\n        var _a = this.initializeSimplicialSetEmbedding(), head = _a.head, tail = _a.tail, epochsPerSample = _a.epochsPerSample;\n        this.optimizationState.head = head;\n        this.optimizationState.tail = tail;\n        this.optimizationState.epochsPerSample = epochsPerSample;\n        this.initializeOptimization();\n        this.prepareForOptimizationLoop();\n        this.isInitialized = true;\n        return this.getNEpochs();\n    };\n    UMAP.prototype.makeSearchFns = function () {\n        var _a = nnDescent.makeInitializations(this.distanceFn), initFromTree = _a.initFromTree, initFromRandom = _a.initFromRandom;\n        this.initFromTree = initFromTree;\n        this.initFromRandom = initFromRandom;\n        this.search = nnDescent.makeInitializedNNSearch(this.distanceFn);\n    };\n    UMAP.prototype.makeSearchGraph = function (X) {\n        var knnIndices = this.knnIndices;\n        var knnDistances = this.knnDistances;\n        var dims = [X.length, X.length];\n        var searchGraph = new matrix.SparseMatrix([], [], [], dims);\n        for (var i = 0; i < knnIndices.length; i++) {\n            var knn = knnIndices[i];\n            var distances = knnDistances[i];\n            for (var j = 0; j < knn.length; j++) {\n                var neighbor = knn[j];\n                var distance = distances[j];\n                if (distance > 0) {\n                    searchGraph.set(i, neighbor, distance);\n                }\n            }\n        }\n        var transpose = matrix.transpose(searchGraph);\n        return matrix.maximum(searchGraph, transpose);\n    };\n    UMAP.prototype.transform = function (toTransform) {\n        var _this = this;\n        var rawData = this.X;\n        if (rawData === undefined || rawData.length === 0) {\n            throw new Error('No data has been fit.');\n        }\n        var nNeighbors = Math.floor(this.nNeighbors * this.transformQueueSize);\n        nNeighbors = Math.min(rawData.length, nNeighbors);\n        var init = nnDescent.initializeSearch(this.rpForest, rawData, toTransform, nNeighbors, this.initFromRandom, this.initFromTree, this.random);\n        var result = this.search(rawData, this.searchGraph, init, toTransform);\n        var _a = heap.deheapSort(result), indices = _a.indices, distances = _a.weights;\n        indices = indices.map(function (x) { return x.slice(0, _this.nNeighbors); });\n        distances = distances.map(function (x) { return x.slice(0, _this.nNeighbors); });\n        var adjustedLocalConnectivity = Math.max(0, this.localConnectivity - 1);\n        var _b = this.smoothKNNDistance(distances, this.nNeighbors, adjustedLocalConnectivity), sigmas = _b.sigmas, rhos = _b.rhos;\n        var _c = this.computeMembershipStrengths(indices, distances, sigmas, rhos), rows = _c.rows, cols = _c.cols, vals = _c.vals;\n        var size = [toTransform.length, rawData.length];\n        var graph = new matrix.SparseMatrix(rows, cols, vals, size);\n        var normed = matrix.normalize(graph, \"l1\");\n        var csrMatrix = matrix.getCSR(normed);\n        var nPoints = toTransform.length;\n        var eIndices = utils.reshape2d(csrMatrix.indices, nPoints, this.nNeighbors);\n        var eWeights = utils.reshape2d(csrMatrix.values, nPoints, this.nNeighbors);\n        var embedding = initTransform(eIndices, eWeights, this.embedding);\n        var nEpochs = this.nEpochs\n            ? this.nEpochs / 3\n            : graph.nRows <= 10000\n                ? 100\n                : 30;\n        var graphMax = graph\n            .getValues()\n            .reduce(function (max, val) { return (val > max ? val : max); }, 0);\n        graph = graph.map(function (value) { return (value < graphMax / nEpochs ? 0 : value); });\n        graph = matrix.eliminateZeros(graph);\n        var epochsPerSample = this.makeEpochsPerSample(graph.getValues(), nEpochs);\n        var head = graph.getRows();\n        var tail = graph.getCols();\n        this.assignOptimizationStateParameters({\n            headEmbedding: embedding,\n            tailEmbedding: this.embedding,\n            head: head,\n            tail: tail,\n            currentEpoch: 0,\n            nEpochs: nEpochs,\n            nVertices: graph.getDims()[1],\n            epochsPerSample: epochsPerSample,\n        });\n        this.prepareForOptimizationLoop();\n        return this.optimizeLayout();\n    };\n    UMAP.prototype.processGraphForSupervisedProjection = function () {\n        var _a = this, Y = _a.Y, X = _a.X;\n        if (Y) {\n            if (Y.length !== X.length) {\n                throw new Error('Length of X and y must be equal');\n            }\n            if (this.targetMetric === \"categorical\") {\n                var lt = this.targetWeight < 1.0;\n                var farDist = lt ? 2.5 * (1.0 / (1.0 - this.targetWeight)) : 1.0e12;\n                this.graph = this.categoricalSimplicialSetIntersection(this.graph, Y, farDist);\n            }\n        }\n    };\n    UMAP.prototype.step = function () {\n        var currentEpoch = this.optimizationState.currentEpoch;\n        if (currentEpoch < this.getNEpochs()) {\n            this.optimizeLayoutStep(currentEpoch);\n        }\n        return this.optimizationState.currentEpoch;\n    };\n    UMAP.prototype.getEmbedding = function () {\n        return this.embedding;\n    };\n    UMAP.prototype.nearestNeighbors = function (X) {\n        var _a = this, distanceFn = _a.distanceFn, nNeighbors = _a.nNeighbors;\n        var log2 = function (n) { return Math.log(n) / Math.log(2); };\n        var metricNNDescent = nnDescent.makeNNDescent(distanceFn, this.random);\n        var round = function (n) {\n            return n === 0.5 ? 0 : Math.round(n);\n        };\n        var nTrees = 5 + Math.floor(round(Math.pow(X.length, 0.5) / 20.0));\n        var nIters = Math.max(5, Math.floor(Math.round(log2(X.length))));\n        this.rpForest = tree.makeForest(X, nNeighbors, nTrees, this.random);\n        var leafArray = tree.makeLeafArray(this.rpForest);\n        var _b = metricNNDescent(X, leafArray, nNeighbors, nIters), indices = _b.indices, weights = _b.weights;\n        return { knnIndices: indices, knnDistances: weights };\n    };\n    UMAP.prototype.fuzzySimplicialSet = function (X, nNeighbors, setOpMixRatio) {\n        if (setOpMixRatio === void 0) { setOpMixRatio = 1.0; }\n        var _a = this, _b = _a.knnIndices, knnIndices = _b === void 0 ? [] : _b, _c = _a.knnDistances, knnDistances = _c === void 0 ? [] : _c, localConnectivity = _a.localConnectivity;\n        var _d = this.smoothKNNDistance(knnDistances, nNeighbors, localConnectivity), sigmas = _d.sigmas, rhos = _d.rhos;\n        var _e = this.computeMembershipStrengths(knnIndices, knnDistances, sigmas, rhos), rows = _e.rows, cols = _e.cols, vals = _e.vals;\n        var size = [X.length, X.length];\n        var sparseMatrix = new matrix.SparseMatrix(rows, cols, vals, size);\n        var transpose = matrix.transpose(sparseMatrix);\n        var prodMatrix = matrix.pairwiseMultiply(sparseMatrix, transpose);\n        var a = matrix.subtract(matrix.add(sparseMatrix, transpose), prodMatrix);\n        var b = matrix.multiplyScalar(a, setOpMixRatio);\n        var c = matrix.multiplyScalar(prodMatrix, 1.0 - setOpMixRatio);\n        var result = matrix.add(b, c);\n        return result;\n    };\n    UMAP.prototype.categoricalSimplicialSetIntersection = function (simplicialSet, target, farDist, unknownDist) {\n        if (unknownDist === void 0) { unknownDist = 1.0; }\n        var intersection = fastIntersection(simplicialSet, target, unknownDist, farDist);\n        intersection = matrix.eliminateZeros(intersection);\n        return resetLocalConnectivity(intersection);\n    };\n    UMAP.prototype.smoothKNNDistance = function (distances, k, localConnectivity, nIter, bandwidth) {\n        if (localConnectivity === void 0) { localConnectivity = 1.0; }\n        if (nIter === void 0) { nIter = 64; }\n        if (bandwidth === void 0) { bandwidth = 1.0; }\n        var target = (Math.log(k) / Math.log(2)) * bandwidth;\n        var rho = utils.zeros(distances.length);\n        var result = utils.zeros(distances.length);\n        for (var i = 0; i < distances.length; i++) {\n            var lo = 0.0;\n            var hi = Infinity;\n            var mid = 1.0;\n            var ithDistances = distances[i];\n            var nonZeroDists = ithDistances.filter(function (d) { return d > 0.0; });\n            if (nonZeroDists.length >= localConnectivity) {\n                var index = Math.floor(localConnectivity);\n                var interpolation = localConnectivity - index;\n                if (index > 0) {\n                    rho[i] = nonZeroDists[index - 1];\n                    if (interpolation > SMOOTH_K_TOLERANCE) {\n                        rho[i] +=\n                            interpolation * (nonZeroDists[index] - nonZeroDists[index - 1]);\n                    }\n                }\n                else {\n                    rho[i] = interpolation * nonZeroDists[0];\n                }\n            }\n            else if (nonZeroDists.length > 0) {\n                rho[i] = utils.max(nonZeroDists);\n            }\n            for (var n = 0; n < nIter; n++) {\n                var psum = 0.0;\n                for (var j = 1; j < distances[i].length; j++) {\n                    var d = distances[i][j] - rho[i];\n                    if (d > 0) {\n                        psum += Math.exp(-(d / mid));\n                    }\n                    else {\n                        psum += 1.0;\n                    }\n                }\n                if (Math.abs(psum - target) < SMOOTH_K_TOLERANCE) {\n                    break;\n                }\n                if (psum > target) {\n                    hi = mid;\n                    mid = (lo + hi) / 2.0;\n                }\n                else {\n                    lo = mid;\n                    if (hi === Infinity) {\n                        mid *= 2;\n                    }\n                    else {\n                        mid = (lo + hi) / 2.0;\n                    }\n                }\n            }\n            result[i] = mid;\n            if (rho[i] > 0.0) {\n                var meanIthDistances = utils.mean(ithDistances);\n                if (result[i] < MIN_K_DIST_SCALE * meanIthDistances) {\n                    result[i] = MIN_K_DIST_SCALE * meanIthDistances;\n                }\n            }\n            else {\n                var meanDistances = utils.mean(distances.map(utils.mean));\n                if (result[i] < MIN_K_DIST_SCALE * meanDistances) {\n                    result[i] = MIN_K_DIST_SCALE * meanDistances;\n                }\n            }\n        }\n        return { sigmas: result, rhos: rho };\n    };\n    UMAP.prototype.computeMembershipStrengths = function (knnIndices, knnDistances, sigmas, rhos) {\n        var nSamples = knnIndices.length;\n        var nNeighbors = knnIndices[0].length;\n        var rows = utils.zeros(nSamples * nNeighbors);\n        var cols = utils.zeros(nSamples * nNeighbors);\n        var vals = utils.zeros(nSamples * nNeighbors);\n        for (var i = 0; i < nSamples; i++) {\n            for (var j = 0; j < nNeighbors; j++) {\n                var val = 0;\n                if (knnIndices[i][j] === -1) {\n                    continue;\n                }\n                if (knnIndices[i][j] === i) {\n                    val = 0.0;\n                }\n                else if (knnDistances[i][j] - rhos[i] <= 0.0) {\n                    val = 1.0;\n                }\n                else {\n                    val = Math.exp(-((knnDistances[i][j] - rhos[i]) / sigmas[i]));\n                }\n                rows[i * nNeighbors + j] = i;\n                cols[i * nNeighbors + j] = knnIndices[i][j];\n                vals[i * nNeighbors + j] = val;\n            }\n        }\n        return { rows: rows, cols: cols, vals: vals };\n    };\n    UMAP.prototype.initializeSimplicialSetEmbedding = function () {\n        var _this = this;\n        var nEpochs = this.getNEpochs();\n        var nComponents = this.nComponents;\n        var graphValues = this.graph.getValues();\n        var graphMax = 0;\n        for (var i = 0; i < graphValues.length; i++) {\n            var value = graphValues[i];\n            if (graphMax < graphValues[i]) {\n                graphMax = value;\n            }\n        }\n        var graph = this.graph.map(function (value) {\n            if (value < graphMax / nEpochs) {\n                return 0;\n            }\n            else {\n                return value;\n            }\n        });\n        this.embedding = utils.zeros(graph.nRows).map(function () {\n            return utils.zeros(nComponents).map(function () {\n                return utils.tauRand(_this.random) * 20 + -10;\n            });\n        });\n        var weights = [];\n        var head = [];\n        var tail = [];\n        var rowColValues = graph.getAll();\n        for (var i = 0; i < rowColValues.length; i++) {\n            var entry = rowColValues[i];\n            if (entry.value) {\n                weights.push(entry.value);\n                tail.push(entry.row);\n                head.push(entry.col);\n            }\n        }\n        var epochsPerSample = this.makeEpochsPerSample(weights, nEpochs);\n        return { head: head, tail: tail, epochsPerSample: epochsPerSample };\n    };\n    UMAP.prototype.makeEpochsPerSample = function (weights, nEpochs) {\n        var result = utils.filled(weights.length, -1.0);\n        var max = utils.max(weights);\n        var nSamples = weights.map(function (w) { return (w / max) * nEpochs; });\n        nSamples.forEach(function (n, i) {\n            if (n > 0)\n                result[i] = nEpochs / nSamples[i];\n        });\n        return result;\n    };\n    UMAP.prototype.assignOptimizationStateParameters = function (state) {\n        Object.assign(this.optimizationState, state);\n    };\n    UMAP.prototype.prepareForOptimizationLoop = function () {\n        var _a = this, repulsionStrength = _a.repulsionStrength, learningRate = _a.learningRate, negativeSampleRate = _a.negativeSampleRate;\n        var _b = this.optimizationState, epochsPerSample = _b.epochsPerSample, headEmbedding = _b.headEmbedding, tailEmbedding = _b.tailEmbedding;\n        var dim = headEmbedding[0].length;\n        var moveOther = headEmbedding.length === tailEmbedding.length;\n        var epochsPerNegativeSample = epochsPerSample.map(function (e) { return e / negativeSampleRate; });\n        var epochOfNextNegativeSample = __spread(epochsPerNegativeSample);\n        var epochOfNextSample = __spread(epochsPerSample);\n        this.assignOptimizationStateParameters({\n            epochOfNextSample: epochOfNextSample,\n            epochOfNextNegativeSample: epochOfNextNegativeSample,\n            epochsPerNegativeSample: epochsPerNegativeSample,\n            moveOther: moveOther,\n            initialAlpha: learningRate,\n            alpha: learningRate,\n            gamma: repulsionStrength,\n            dim: dim,\n        });\n    };\n    UMAP.prototype.initializeOptimization = function () {\n        var headEmbedding = this.embedding;\n        var tailEmbedding = this.embedding;\n        var _a = this.optimizationState, head = _a.head, tail = _a.tail, epochsPerSample = _a.epochsPerSample;\n        var nEpochs = this.getNEpochs();\n        var nVertices = this.graph.nCols;\n        var _b = findABParams(this.spread, this.minDist), a = _b.a, b = _b.b;\n        this.assignOptimizationStateParameters({\n            headEmbedding: headEmbedding,\n            tailEmbedding: tailEmbedding,\n            head: head,\n            tail: tail,\n            epochsPerSample: epochsPerSample,\n            a: a,\n            b: b,\n            nEpochs: nEpochs,\n            nVertices: nVertices,\n        });\n    };\n    UMAP.prototype.optimizeLayoutStep = function (n) {\n        var optimizationState = this.optimizationState;\n        var head = optimizationState.head, tail = optimizationState.tail, headEmbedding = optimizationState.headEmbedding, tailEmbedding = optimizationState.tailEmbedding, epochsPerSample = optimizationState.epochsPerSample, epochOfNextSample = optimizationState.epochOfNextSample, epochOfNextNegativeSample = optimizationState.epochOfNextNegativeSample, epochsPerNegativeSample = optimizationState.epochsPerNegativeSample, moveOther = optimizationState.moveOther, initialAlpha = optimizationState.initialAlpha, alpha = optimizationState.alpha, gamma = optimizationState.gamma, a = optimizationState.a, b = optimizationState.b, dim = optimizationState.dim, nEpochs = optimizationState.nEpochs, nVertices = optimizationState.nVertices;\n        var clipValue = 4.0;\n        for (var i = 0; i < epochsPerSample.length; i++) {\n            if (epochOfNextSample[i] > n) {\n                continue;\n            }\n            var j = head[i];\n            var k = tail[i];\n            var current = headEmbedding[j];\n            var other = tailEmbedding[k];\n            var distSquared = rDist(current, other);\n            var gradCoeff = 0;\n            if (distSquared > 0) {\n                gradCoeff = -2.0 * a * b * Math.pow(distSquared, b - 1.0);\n                gradCoeff /= a * Math.pow(distSquared, b) + 1.0;\n            }\n            for (var d = 0; d < dim; d++) {\n                var gradD = clip(gradCoeff * (current[d] - other[d]), clipValue);\n                current[d] += gradD * alpha;\n                if (moveOther) {\n                    other[d] += -gradD * alpha;\n                }\n            }\n            epochOfNextSample[i] += epochsPerSample[i];\n            var nNegSamples = Math.floor((n - epochOfNextNegativeSample[i]) / epochsPerNegativeSample[i]);\n            for (var p = 0; p < nNegSamples; p++) {\n                var k_1 = utils.tauRandInt(nVertices, this.random);\n                var other_1 = tailEmbedding[k_1];\n                var distSquared_1 = rDist(current, other_1);\n                var gradCoeff_1 = 0.0;\n                if (distSquared_1 > 0.0) {\n                    gradCoeff_1 = 2.0 * gamma * b;\n                    gradCoeff_1 /=\n                        (0.001 + distSquared_1) * (a * Math.pow(distSquared_1, b) + 1);\n                }\n                else if (j === k_1) {\n                    continue;\n                }\n                for (var d = 0; d < dim; d++) {\n                    var gradD = 4.0;\n                    if (gradCoeff_1 > 0.0) {\n                        gradD = clip(gradCoeff_1 * (current[d] - other_1[d]), clipValue);\n                    }\n                    current[d] += gradD * alpha;\n                }\n            }\n            epochOfNextNegativeSample[i] += nNegSamples * epochsPerNegativeSample[i];\n        }\n        optimizationState.alpha = initialAlpha * (1.0 - n / nEpochs);\n        optimizationState.currentEpoch += 1;\n        return headEmbedding;\n    };\n    UMAP.prototype.optimizeLayoutAsync = function (epochCallback) {\n        var _this = this;\n        if (epochCallback === void 0) { epochCallback = function () { return true; }; }\n        return new Promise(function (resolve, reject) {\n            var step = function () { return __awaiter(_this, void 0, void 0, function () {\n                var _a, nEpochs, currentEpoch, epochCompleted, shouldStop, isFinished;\n                return __generator(this, function (_b) {\n                    try {\n                        _a = this.optimizationState, nEpochs = _a.nEpochs, currentEpoch = _a.currentEpoch;\n                        this.embedding = this.optimizeLayoutStep(currentEpoch);\n                        epochCompleted = this.optimizationState.currentEpoch;\n                        shouldStop = epochCallback(epochCompleted) === false;\n                        isFinished = epochCompleted === nEpochs;\n                        if (!shouldStop && !isFinished) {\n                            setTimeout(function () { return step(); }, 0);\n                        }\n                        else {\n                            return [2, resolve(isFinished)];\n                        }\n                    }\n                    catch (err) {\n                        reject(err);\n                    }\n                    return [2];\n                });\n            }); };\n            setTimeout(function () { return step(); }, 0);\n        });\n    };\n    UMAP.prototype.optimizeLayout = function (epochCallback) {\n        if (epochCallback === void 0) { epochCallback = function () { return true; }; }\n        var isFinished = false;\n        var embedding = [];\n        while (!isFinished) {\n            var _a = this.optimizationState, nEpochs = _a.nEpochs, currentEpoch = _a.currentEpoch;\n            embedding = this.optimizeLayoutStep(currentEpoch);\n            var epochCompleted = this.optimizationState.currentEpoch;\n            var shouldStop = epochCallback(epochCompleted) === false;\n            isFinished = epochCompleted === nEpochs || shouldStop;\n        }\n        return embedding;\n    };\n    UMAP.prototype.getNEpochs = function () {\n        var graph = this.graph;\n        if (this.nEpochs > 0) {\n            return this.nEpochs;\n        }\n        var length = graph.nRows;\n        if (length <= 2500) {\n            return 500;\n        }\n        else if (length <= 5000) {\n            return 400;\n        }\n        else if (length <= 7500) {\n            return 300;\n        }\n        else {\n            return 200;\n        }\n    };\n    return UMAP;\n}());\nexports.UMAP = UMAP;\nfunction euclidean(x, y) {\n    var result = 0;\n    for (var i = 0; i < x.length; i++) {\n        result += Math.pow((x[i] - y[i]), 2);\n    }\n    return Math.sqrt(result);\n}\nexports.euclidean = euclidean;\nfunction cosine(x, y) {\n    var result = 0.0;\n    var normX = 0.0;\n    var normY = 0.0;\n    for (var i = 0; i < x.length; i++) {\n        result += x[i] * y[i];\n        normX += Math.pow(x[i], 2);\n        normY += Math.pow(y[i], 2);\n    }\n    if (normX === 0 && normY === 0) {\n        return 0;\n    }\n    else if (normX === 0 || normY === 0) {\n        return 1.0;\n    }\n    else {\n        return 1.0 - result / Math.sqrt(normX * normY);\n    }\n}\nexports.cosine = cosine;\nvar OptimizationState = (function () {\n    function OptimizationState() {\n        this.currentEpoch = 0;\n        this.headEmbedding = [];\n        this.tailEmbedding = [];\n        this.head = [];\n        this.tail = [];\n        this.epochsPerSample = [];\n        this.epochOfNextSample = [];\n        this.epochOfNextNegativeSample = [];\n        this.epochsPerNegativeSample = [];\n        this.moveOther = true;\n        this.initialAlpha = 1.0;\n        this.alpha = 1.0;\n        this.gamma = 1.0;\n        this.a = 1.5769434603113077;\n        this.b = 0.8950608779109733;\n        this.dim = 2;\n        this.nEpochs = 500;\n        this.nVertices = 0;\n    }\n    return OptimizationState;\n}());\nfunction clip(x, clipValue) {\n    if (x > clipValue)\n        return clipValue;\n    else if (x < -clipValue)\n        return -clipValue;\n    else\n        return x;\n}\nfunction rDist(x, y) {\n    var result = 0.0;\n    for (var i = 0; i < x.length; i++) {\n        result += Math.pow(x[i] - y[i], 2);\n    }\n    return result;\n}\nfunction findABParams(spread, minDist) {\n    var curve = function (_a) {\n        var _b = __read(_a, 2), a = _b[0], b = _b[1];\n        return function (x) {\n            return 1.0 / (1.0 + a * Math.pow(x, (2 * b)));\n        };\n    };\n    var xv = utils\n        .linear(0, spread * 3, 300)\n        .map(function (val) { return (val < minDist ? 1.0 : val); });\n    var yv = utils.zeros(xv.length).map(function (val, index) {\n        var gte = xv[index] >= minDist;\n        return gte ? Math.exp(-(xv[index] - minDist) / spread) : val;\n    });\n    var initialValues = [0.5, 0.5];\n    var data = { x: xv, y: yv };\n    var options = {\n        damping: 1.5,\n        initialValues: initialValues,\n        gradientDifference: 10e-2,\n        maxIterations: 100,\n        errorTolerance: 10e-3,\n    };\n    var parameterValues = ml_levenberg_marquardt_1.default(data, curve, options).parameterValues;\n    var _a = __read(parameterValues, 2), a = _a[0], b = _a[1];\n    return { a: a, b: b };\n}\nexports.findABParams = findABParams;\nfunction fastIntersection(graph, target, unknownDist, farDist) {\n    if (unknownDist === void 0) { unknownDist = 1.0; }\n    if (farDist === void 0) { farDist = 5.0; }\n    return graph.map(function (value, row, col) {\n        if (target[row] === -1 || target[col] === -1) {\n            return value * Math.exp(-unknownDist);\n        }\n        else if (target[row] !== target[col]) {\n            return value * Math.exp(-farDist);\n        }\n        else {\n            return value;\n        }\n    });\n}\nexports.fastIntersection = fastIntersection;\nfunction resetLocalConnectivity(simplicialSet) {\n    simplicialSet = matrix.normalize(simplicialSet, \"max\");\n    var transpose = matrix.transpose(simplicialSet);\n    var prodMatrix = matrix.pairwiseMultiply(transpose, simplicialSet);\n    simplicialSet = matrix.add(simplicialSet, matrix.subtract(transpose, prodMatrix));\n    return matrix.eliminateZeros(simplicialSet);\n}\nexports.resetLocalConnectivity = resetLocalConnectivity;\nfunction initTransform(indices, weights, embedding) {\n    var result = utils\n        .zeros(indices.length)\n        .map(function (z) { return utils.zeros(embedding[0].length); });\n    for (var i = 0; i < indices.length; i++) {\n        for (var j = 0; j < indices[0].length; j++) {\n            for (var d = 0; d < embedding[0].length; d++) {\n                var a = indices[i][j];\n                result[i][d] += weights[i][j] * embedding[a][d];\n            }\n        }\n    }\n    return result;\n}\nexports.initTransform = initTransform;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar umap_1 = require(\"./umap\");\nexports.UMAP = umap_1.UMAP;\n"],"names":["__values","this","m","i","utils","tauRandInt","n","random","tauRand","norm","vec","e_1","_a","result","vec_1","vec_1_1","item","e_1_1","empty","output","range","_","filled","v","zeros","ones","linear","a","b","len","sum","input","val","mean","max","max2d","j","rejectionSample","nSamples","poolSize","rejectSample","broken","k","reshape2d","x","rows","index","col","__importStar","mod","heap","require$$0","makeHeap","nPoints","size","makeArrays","fillValue","heapPush","row","weight","flag","indices","weights","uncheckedHeapPush","isNew","iSwap","ic1","ic2","heapShape2","buildCandidates","currentGraph","nVertices","nNeighbors","maxCandidates","candidateNeighbors","idx","isn","d","deheapSort","indHeap","distHeap","indHeapIndex","distHeapIndex","temp1","temp2","siftDown","heap1","heap2","ceiling","elt","leftChild","rightChild","swap","smallestFlagged","ind","dist","minDist","resultIndex","__read","r","ar","e","error","matrix","SparseMatrix","cols","values","dims","key","withinBounds","value","defaultValue","ordered","rowColValues","_b","fn","vals","_this","transpose","identity","pairwiseMultiply","elementWise","y","add","subtract","maximum","multiplyScalar","scalar","eliminateZeros","zeroIndices","removeByZeroIndex","nextValues","nextRows","nextCols","normalize","normType","normFn","normFns","colsByRow","nextMatrix","_loop_1","_c","xs","op","visited","operate","nextValue","valuesA","rowsA","colsA","valuesB","rowsB","colsB","getCSR","entries","indptr","currentRow","__spread","tree","FlatTree","hyperplanes","offsets","children","makeForest","data","nTrees","leafSize","trees","makeTree","forest","flattenTree","makeEuclideanTree","q","splitResults","euclideanRandomProjectionSplit","indicesLeft","indicesRight","hyperplane","offset","node","dim","leftIndex","rightIndex","left","right","hyperplaneOffset","hyperplaneVector","nLeft","nRight","side","margin","nNodes","numNodes","nLeaves","numLeaves","recursiveFlatten","nodeNum","leafNum","oldNodeNum","res","makeLeafArray","rpForest","rpForest_1","rpForest_1_1","selectSide","point","searchFlatTree","nn_descent","require$$1","require$$2","require$$3","makeNNDescent","distanceFn","leafArray","nIters","delta","rho","rpTreeInit","c","p","cj","ck","sorted","makeInitializations","initFromRandom","queryPoints","_heap","initFromTree","_tree","makeInitializedNNSearch","graph","initialization","tried","vertex","candidates","candidates_1","candidates_1_1","candidate","initializeSearch","e_2","results","forest_1","forest_1_1","tree_1","e_2_1","toString","isAnyArray","object","errorCalculation","parameters","parameterizedFunction","func","tag","options","_options$fromIndex","fromIndex","_options$toIndex","toIndex","maxValue","min","minValue","rescale","currentMin","currentMax","_options$min","_options$max","factor","indent","indentData","inspectMatrix","inspectMatrixWithOptions","maxRows","maxColumns","maxNumSize","padMinus","inspectData","columns","maxI","maxJ","loop","line","formatNumber","num","formatNumber2","str","fix","exp","installMathOperations","AbstractMatrix","Matrix","arg0","checkRowIndex","outer","checkColumnIndex","checkRowVector","vector","checkColumnVector","checkRowIndices","rowIndices","checkColumnIndices","columnIndices","checkRange","startRow","endRow","startColumn","endColumn","checkNumber","newArray","length","array","name","checkNonEmpty","sumByRow","sumByColumn","sumAll","productByRow","productByColumn","productAll","varianceByRow","unbiased","variance","sum1","sum2","varianceByColumn","varianceAll","centerByRow","centerByColumn","centerAll","getScaleByRow","scale","scaleByRow","getScaleByColumn","scaleByColumn","getScaleAll","divider","scaleAll","newRows","newColumns","newData","newMatrix","column","interval","l","matrix1","matrix2","callback","copy","previousColumn","isEchelonForm","checked","isReducedEchelonForm","h","iMax","tmp","pivot","row1","row2","temp","column1","column2","by","diag","type","vector2","vector1","dot","other","Bcolj","s","a11","b11","a12","b12","a21","b21","a22","b22","m1","m2","m3","m4","m5","m6","m7","c00","c01","c10","c11","a00","a01","a02","a10","a20","b00","b01","b02","b10","b20","m8","m9","m10","m11","m12","m13","m14","m15","m16","m17","m18","m19","m20","m21","m22","m23","c02","c12","c20","c21","c22","r1","c1","r2","c2","embed","mat","resultat","blockMult","halfRows","halfCols","middle","first","last","AxI","IxB","compareFunction","compareNumbers","rowIndex","columnIndex","trace","center","isArrayOfNumbers","element","nRows","nColumns","arrayData","newRow","WrapperMatrix2D","LuDecomposition","lu","pivotVector","pivotSign","t","LUcolj","kmax","count","X","determinant","hypotenuse","QrDecomposition","qr","rdiag","nrm","SingularValueDecomposition","computeLeftSingularVectors","computeRightSingularVectors","autoTranspose","wantu","wantv","swapped","aux","nu","ni","U","V","work","si","nct","nrt","mrc","pp","eps","kase","alpha","ks","f","cs","sn","sp","spm1","epm1","sk","ek","shift","g","Y","scols","Ls","VL","vrows","urows","VLU","vcols","ucols","tol","ii","inverse","useSVD","solve","leftHandSide","rightHandSide","gradientFunction","evaluatedData","params","gradientDifference","paramFunction","ans","param","auxParams","funcParam","matrixFunction","step","damping","gradientFunc","matrixFunc","inverseMatrix","levenbergMarquardt","maxIterations","errorTolerance","minValues","maxValues","initialValues","isArray","parLen","converged","iteration","__awaiter","thisArg","_arguments","P","generator","resolve","reject","fulfilled","rejected","__generator","body","verb","__importDefault","umap","nnDescent","require$$4","ml_levenberg_marquardt_1","require$$5","SMOOTH_K_TOLERANCE","MIN_K_DIST_SCALE","UMAP","euclidean","OptimizationState","setParam","knnIndices","knnDistances","knnResults","head","tail","epochsPerSample","searchGraph","knn","distances","neighbor","distance","toTransform","rawData","init","adjustedLocalConnectivity","sigmas","rhos","normed","csrMatrix","eIndices","eWeights","embedding","initTransform","nEpochs","graphMax","lt","farDist","currentEpoch","log2","metricNNDescent","round","setOpMixRatio","localConnectivity","_d","_e","sparseMatrix","prodMatrix","simplicialSet","target","unknownDist","intersection","fastIntersection","resetLocalConnectivity","nIter","bandwidth","lo","hi","mid","ithDistances","nonZeroDists","interpolation","psum","meanIthDistances","meanDistances","nComponents","graphValues","entry","w","state","repulsionStrength","learningRate","negativeSampleRate","headEmbedding","tailEmbedding","moveOther","epochsPerNegativeSample","epochOfNextNegativeSample","epochOfNextSample","findABParams","optimizationState","initialAlpha","gamma","clipValue","current","distSquared","rDist","gradCoeff","gradD","clip","nNegSamples","k_1","other_1","distSquared_1","gradCoeff_1","epochCallback","epochCompleted","shouldStop","isFinished","err","cosine","normX","normY","spread","curve","xv","yv","gte","parameterValues","z","umap_1"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}